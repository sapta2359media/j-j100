/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 104.0, "minX": 0.0, "maxY": 3291.0, "series": [{"data": [[0.0, 233.0], [0.1, 233.0], [0.2, 233.0], [0.3, 233.0], [0.4, 233.0], [0.5, 233.0], [0.6, 233.0], [0.7, 233.0], [0.8, 233.0], [0.9, 233.0], [1.0, 244.0], [1.1, 244.0], [1.2, 244.0], [1.3, 244.0], [1.4, 244.0], [1.5, 244.0], [1.6, 244.0], [1.7, 244.0], [1.8, 244.0], [1.9, 244.0], [2.0, 303.0], [2.1, 303.0], [2.2, 303.0], [2.3, 303.0], [2.4, 303.0], [2.5, 303.0], [2.6, 303.0], [2.7, 303.0], [2.8, 303.0], [2.9, 303.0], [3.0, 333.0], [3.1, 333.0], [3.2, 333.0], [3.3, 333.0], [3.4, 333.0], [3.5, 333.0], [3.6, 333.0], [3.7, 333.0], [3.8, 333.0], [3.9, 333.0], [4.0, 341.0], [4.1, 341.0], [4.2, 341.0], [4.3, 341.0], [4.4, 341.0], [4.5, 341.0], [4.6, 341.0], [4.7, 341.0], [4.8, 341.0], [4.9, 341.0], [5.0, 363.0], [5.1, 363.0], [5.2, 363.0], [5.3, 363.0], [5.4, 363.0], [5.5, 363.0], [5.6, 363.0], [5.7, 363.0], [5.8, 363.0], [5.9, 363.0], [6.0, 411.0], [6.1, 411.0], [6.2, 411.0], [6.3, 411.0], [6.4, 411.0], [6.5, 411.0], [6.6, 411.0], [6.7, 411.0], [6.8, 411.0], [6.9, 411.0], [7.0, 415.0], [7.1, 415.0], [7.2, 415.0], [7.3, 415.0], [7.4, 415.0], [7.5, 415.0], [7.6, 415.0], [7.7, 415.0], [7.8, 415.0], [7.9, 415.0], [8.0, 415.0], [8.1, 415.0], [8.2, 415.0], [8.3, 415.0], [8.4, 415.0], [8.5, 415.0], [8.6, 415.0], [8.7, 415.0], [8.8, 415.0], [8.9, 415.0], [9.0, 444.0], [9.1, 444.0], [9.2, 444.0], [9.3, 444.0], [9.4, 444.0], [9.5, 444.0], [9.6, 444.0], [9.7, 444.0], [9.8, 444.0], [9.9, 444.0], [10.0, 446.0], [10.1, 446.0], [10.2, 446.0], [10.3, 446.0], [10.4, 446.0], [10.5, 446.0], [10.6, 446.0], [10.7, 446.0], [10.8, 446.0], [10.9, 446.0], [11.0, 459.0], [11.1, 459.0], [11.2, 459.0], [11.3, 459.0], [11.4, 459.0], [11.5, 459.0], [11.6, 459.0], [11.7, 459.0], [11.8, 459.0], [11.9, 459.0], [12.0, 463.0], [12.1, 463.0], [12.2, 463.0], [12.3, 463.0], [12.4, 463.0], [12.5, 463.0], [12.6, 463.0], [12.7, 463.0], [12.8, 463.0], [12.9, 463.0], [13.0, 489.0], [13.1, 489.0], [13.2, 489.0], [13.3, 489.0], [13.4, 489.0], [13.5, 489.0], [13.6, 489.0], [13.7, 489.0], [13.8, 489.0], [13.9, 489.0], [14.0, 502.0], [14.1, 502.0], [14.2, 502.0], [14.3, 502.0], [14.4, 502.0], [14.5, 502.0], [14.6, 502.0], [14.7, 502.0], [14.8, 502.0], [14.9, 502.0], [15.0, 505.0], [15.1, 505.0], [15.2, 505.0], [15.3, 505.0], [15.4, 505.0], [15.5, 505.0], [15.6, 505.0], [15.7, 505.0], [15.8, 505.0], [15.9, 505.0], [16.0, 505.0], [16.1, 505.0], [16.2, 505.0], [16.3, 505.0], [16.4, 505.0], [16.5, 505.0], [16.6, 505.0], [16.7, 505.0], [16.8, 505.0], [16.9, 505.0], [17.0, 512.0], [17.1, 512.0], [17.2, 512.0], [17.3, 512.0], [17.4, 512.0], [17.5, 512.0], [17.6, 512.0], [17.7, 512.0], [17.8, 512.0], [17.9, 512.0], [18.0, 515.0], [18.1, 515.0], [18.2, 515.0], [18.3, 515.0], [18.4, 515.0], [18.5, 515.0], [18.6, 515.0], [18.7, 515.0], [18.8, 515.0], [18.9, 515.0], [19.0, 519.0], [19.1, 519.0], [19.2, 519.0], [19.3, 519.0], [19.4, 519.0], [19.5, 519.0], [19.6, 519.0], [19.7, 519.0], [19.8, 519.0], [19.9, 519.0], [20.0, 525.0], [20.1, 525.0], [20.2, 525.0], [20.3, 525.0], [20.4, 525.0], [20.5, 525.0], [20.6, 525.0], [20.7, 525.0], [20.8, 525.0], [20.9, 525.0], [21.0, 525.0], [21.1, 525.0], [21.2, 525.0], [21.3, 525.0], [21.4, 525.0], [21.5, 525.0], [21.6, 525.0], [21.7, 525.0], [21.8, 525.0], [21.9, 525.0], [22.0, 525.0], [22.1, 525.0], [22.2, 525.0], [22.3, 525.0], [22.4, 525.0], [22.5, 525.0], [22.6, 525.0], [22.7, 525.0], [22.8, 525.0], [22.9, 525.0], [23.0, 525.0], [23.1, 525.0], [23.2, 525.0], [23.3, 525.0], [23.4, 525.0], [23.5, 525.0], [23.6, 525.0], [23.7, 525.0], [23.8, 525.0], [23.9, 525.0], [24.0, 531.0], [24.1, 531.0], [24.2, 531.0], [24.3, 531.0], [24.4, 531.0], [24.5, 531.0], [24.6, 531.0], [24.7, 531.0], [24.8, 531.0], [24.9, 531.0], [25.0, 535.0], [25.1, 535.0], [25.2, 535.0], [25.3, 535.0], [25.4, 535.0], [25.5, 535.0], [25.6, 535.0], [25.7, 535.0], [25.8, 535.0], [25.9, 535.0], [26.0, 541.0], [26.1, 541.0], [26.2, 541.0], [26.3, 541.0], [26.4, 541.0], [26.5, 541.0], [26.6, 541.0], [26.7, 541.0], [26.8, 541.0], [26.9, 541.0], [27.0, 541.0], [27.1, 541.0], [27.2, 541.0], [27.3, 541.0], [27.4, 541.0], [27.5, 541.0], [27.6, 541.0], [27.7, 541.0], [27.8, 541.0], [27.9, 541.0], [28.0, 548.0], [28.1, 548.0], [28.2, 548.0], [28.3, 548.0], [28.4, 548.0], [28.5, 548.0], [28.6, 548.0], [28.7, 548.0], [28.8, 548.0], [28.9, 548.0], [29.0, 553.0], [29.1, 553.0], [29.2, 553.0], [29.3, 553.0], [29.4, 553.0], [29.5, 553.0], [29.6, 553.0], [29.7, 553.0], [29.8, 553.0], [29.9, 553.0], [30.0, 563.0], [30.1, 563.0], [30.2, 563.0], [30.3, 563.0], [30.4, 563.0], [30.5, 563.0], [30.6, 563.0], [30.7, 563.0], [30.8, 563.0], [30.9, 563.0], [31.0, 565.0], [31.1, 565.0], [31.2, 565.0], [31.3, 565.0], [31.4, 565.0], [31.5, 565.0], [31.6, 565.0], [31.7, 565.0], [31.8, 565.0], [31.9, 565.0], [32.0, 566.0], [32.1, 566.0], [32.2, 566.0], [32.3, 566.0], [32.4, 566.0], [32.5, 566.0], [32.6, 566.0], [32.7, 566.0], [32.8, 566.0], [32.9, 566.0], [33.0, 567.0], [33.1, 567.0], [33.2, 567.0], [33.3, 567.0], [33.4, 567.0], [33.5, 567.0], [33.6, 567.0], [33.7, 567.0], [33.8, 567.0], [33.9, 567.0], [34.0, 571.0], [34.1, 571.0], [34.2, 571.0], [34.3, 571.0], [34.4, 571.0], [34.5, 571.0], [34.6, 571.0], [34.7, 571.0], [34.8, 571.0], [34.9, 571.0], [35.0, 572.0], [35.1, 572.0], [35.2, 572.0], [35.3, 572.0], [35.4, 572.0], [35.5, 572.0], [35.6, 572.0], [35.7, 572.0], [35.8, 572.0], [35.9, 572.0], [36.0, 575.0], [36.1, 575.0], [36.2, 575.0], [36.3, 575.0], [36.4, 575.0], [36.5, 575.0], [36.6, 575.0], [36.7, 575.0], [36.8, 575.0], [36.9, 575.0], [37.0, 576.0], [37.1, 576.0], [37.2, 576.0], [37.3, 576.0], [37.4, 576.0], [37.5, 576.0], [37.6, 576.0], [37.7, 576.0], [37.8, 576.0], [37.9, 576.0], [38.0, 579.0], [38.1, 579.0], [38.2, 579.0], [38.3, 579.0], [38.4, 579.0], [38.5, 579.0], [38.6, 579.0], [38.7, 579.0], [38.8, 579.0], [38.9, 579.0], [39.0, 587.0], [39.1, 587.0], [39.2, 587.0], [39.3, 587.0], [39.4, 587.0], [39.5, 587.0], [39.6, 587.0], [39.7, 587.0], [39.8, 587.0], [39.9, 587.0], [40.0, 592.0], [40.1, 592.0], [40.2, 592.0], [40.3, 592.0], [40.4, 592.0], [40.5, 592.0], [40.6, 592.0], [40.7, 592.0], [40.8, 592.0], [40.9, 592.0], [41.0, 595.0], [41.1, 595.0], [41.2, 595.0], [41.3, 595.0], [41.4, 595.0], [41.5, 595.0], [41.6, 595.0], [41.7, 595.0], [41.8, 595.0], [41.9, 595.0], [42.0, 597.0], [42.1, 597.0], [42.2, 597.0], [42.3, 597.0], [42.4, 597.0], [42.5, 597.0], [42.6, 597.0], [42.7, 597.0], [42.8, 597.0], [42.9, 597.0], [43.0, 598.0], [43.1, 598.0], [43.2, 598.0], [43.3, 598.0], [43.4, 598.0], [43.5, 598.0], [43.6, 598.0], [43.7, 598.0], [43.8, 598.0], [43.9, 598.0], [44.0, 608.0], [44.1, 608.0], [44.2, 608.0], [44.3, 608.0], [44.4, 608.0], [44.5, 608.0], [44.6, 608.0], [44.7, 608.0], [44.8, 608.0], [44.9, 608.0], [45.0, 613.0], [45.1, 613.0], [45.2, 613.0], [45.3, 613.0], [45.4, 613.0], [45.5, 613.0], [45.6, 613.0], [45.7, 613.0], [45.8, 613.0], [45.9, 613.0], [46.0, 616.0], [46.1, 616.0], [46.2, 616.0], [46.3, 616.0], [46.4, 616.0], [46.5, 616.0], [46.6, 616.0], [46.7, 616.0], [46.8, 616.0], [46.9, 616.0], [47.0, 618.0], [47.1, 618.0], [47.2, 618.0], [47.3, 618.0], [47.4, 618.0], [47.5, 618.0], [47.6, 618.0], [47.7, 618.0], [47.8, 618.0], [47.9, 618.0], [48.0, 625.0], [48.1, 625.0], [48.2, 625.0], [48.3, 625.0], [48.4, 625.0], [48.5, 625.0], [48.6, 625.0], [48.7, 625.0], [48.8, 625.0], [48.9, 625.0], [49.0, 628.0], [49.1, 628.0], [49.2, 628.0], [49.3, 628.0], [49.4, 628.0], [49.5, 628.0], [49.6, 628.0], [49.7, 628.0], [49.8, 628.0], [49.9, 628.0], [50.0, 631.0], [50.1, 631.0], [50.2, 631.0], [50.3, 631.0], [50.4, 631.0], [50.5, 631.0], [50.6, 631.0], [50.7, 631.0], [50.8, 631.0], [50.9, 631.0], [51.0, 638.0], [51.1, 638.0], [51.2, 638.0], [51.3, 638.0], [51.4, 638.0], [51.5, 638.0], [51.6, 638.0], [51.7, 638.0], [51.8, 638.0], [51.9, 638.0], [52.0, 640.0], [52.1, 640.0], [52.2, 640.0], [52.3, 640.0], [52.4, 640.0], [52.5, 640.0], [52.6, 640.0], [52.7, 640.0], [52.8, 640.0], [52.9, 640.0], [53.0, 644.0], [53.1, 644.0], [53.2, 644.0], [53.3, 644.0], [53.4, 644.0], [53.5, 644.0], [53.6, 644.0], [53.7, 644.0], [53.8, 644.0], [53.9, 644.0], [54.0, 648.0], [54.1, 648.0], [54.2, 648.0], [54.3, 648.0], [54.4, 648.0], [54.5, 648.0], [54.6, 648.0], [54.7, 648.0], [54.8, 648.0], [54.9, 648.0], [55.0, 653.0], [55.1, 653.0], [55.2, 653.0], [55.3, 653.0], [55.4, 653.0], [55.5, 653.0], [55.6, 653.0], [55.7, 653.0], [55.8, 653.0], [55.9, 653.0], [56.0, 654.0], [56.1, 654.0], [56.2, 654.0], [56.3, 654.0], [56.4, 654.0], [56.5, 654.0], [56.6, 654.0], [56.7, 654.0], [56.8, 654.0], [56.9, 654.0], [57.0, 656.0], [57.1, 656.0], [57.2, 656.0], [57.3, 656.0], [57.4, 656.0], [57.5, 656.0], [57.6, 656.0], [57.7, 656.0], [57.8, 656.0], [57.9, 656.0], [58.0, 664.0], [58.1, 664.0], [58.2, 664.0], [58.3, 664.0], [58.4, 664.0], [58.5, 664.0], [58.6, 664.0], [58.7, 664.0], [58.8, 664.0], [58.9, 664.0], [59.0, 669.0], [59.1, 669.0], [59.2, 669.0], [59.3, 669.0], [59.4, 669.0], [59.5, 669.0], [59.6, 669.0], [59.7, 669.0], [59.8, 669.0], [59.9, 669.0], [60.0, 670.0], [60.1, 670.0], [60.2, 670.0], [60.3, 670.0], [60.4, 670.0], [60.5, 670.0], [60.6, 670.0], [60.7, 670.0], [60.8, 670.0], [60.9, 670.0], [61.0, 671.0], [61.1, 671.0], [61.2, 671.0], [61.3, 671.0], [61.4, 671.0], [61.5, 671.0], [61.6, 671.0], [61.7, 671.0], [61.8, 671.0], [61.9, 671.0], [62.0, 677.0], [62.1, 677.0], [62.2, 677.0], [62.3, 677.0], [62.4, 677.0], [62.5, 677.0], [62.6, 677.0], [62.7, 677.0], [62.8, 677.0], [62.9, 677.0], [63.0, 678.0], [63.1, 678.0], [63.2, 678.0], [63.3, 678.0], [63.4, 678.0], [63.5, 678.0], [63.6, 678.0], [63.7, 678.0], [63.8, 678.0], [63.9, 678.0], [64.0, 682.0], [64.1, 682.0], [64.2, 682.0], [64.3, 682.0], [64.4, 682.0], [64.5, 682.0], [64.6, 682.0], [64.7, 682.0], [64.8, 682.0], [64.9, 682.0], [65.0, 684.0], [65.1, 684.0], [65.2, 684.0], [65.3, 684.0], [65.4, 684.0], [65.5, 684.0], [65.6, 684.0], [65.7, 684.0], [65.8, 684.0], [65.9, 684.0], [66.0, 684.0], [66.1, 684.0], [66.2, 684.0], [66.3, 684.0], [66.4, 684.0], [66.5, 684.0], [66.6, 684.0], [66.7, 684.0], [66.8, 684.0], [66.9, 684.0], [67.0, 689.0], [67.1, 689.0], [67.2, 689.0], [67.3, 689.0], [67.4, 689.0], [67.5, 689.0], [67.6, 689.0], [67.7, 689.0], [67.8, 689.0], [67.9, 689.0], [68.0, 694.0], [68.1, 694.0], [68.2, 694.0], [68.3, 694.0], [68.4, 694.0], [68.5, 694.0], [68.6, 694.0], [68.7, 694.0], [68.8, 694.0], [68.9, 694.0], [69.0, 697.0], [69.1, 697.0], [69.2, 697.0], [69.3, 697.0], [69.4, 697.0], [69.5, 697.0], [69.6, 697.0], [69.7, 697.0], [69.8, 697.0], [69.9, 697.0], [70.0, 699.0], [70.1, 699.0], [70.2, 699.0], [70.3, 699.0], [70.4, 699.0], [70.5, 699.0], [70.6, 699.0], [70.7, 699.0], [70.8, 699.0], [70.9, 699.0], [71.0, 706.0], [71.1, 706.0], [71.2, 706.0], [71.3, 706.0], [71.4, 706.0], [71.5, 706.0], [71.6, 706.0], [71.7, 706.0], [71.8, 706.0], [71.9, 706.0], [72.0, 707.0], [72.1, 707.0], [72.2, 707.0], [72.3, 707.0], [72.4, 707.0], [72.5, 707.0], [72.6, 707.0], [72.7, 707.0], [72.8, 707.0], [72.9, 707.0], [73.0, 710.0], [73.1, 710.0], [73.2, 710.0], [73.3, 710.0], [73.4, 710.0], [73.5, 710.0], [73.6, 710.0], [73.7, 710.0], [73.8, 710.0], [73.9, 710.0], [74.0, 711.0], [74.1, 711.0], [74.2, 711.0], [74.3, 711.0], [74.4, 711.0], [74.5, 711.0], [74.6, 711.0], [74.7, 711.0], [74.8, 711.0], [74.9, 711.0], [75.0, 712.0], [75.1, 712.0], [75.2, 712.0], [75.3, 712.0], [75.4, 712.0], [75.5, 712.0], [75.6, 712.0], [75.7, 712.0], [75.8, 712.0], [75.9, 712.0], [76.0, 721.0], [76.1, 721.0], [76.2, 721.0], [76.3, 721.0], [76.4, 721.0], [76.5, 721.0], [76.6, 721.0], [76.7, 721.0], [76.8, 721.0], [76.9, 721.0], [77.0, 722.0], [77.1, 722.0], [77.2, 722.0], [77.3, 722.0], [77.4, 722.0], [77.5, 722.0], [77.6, 722.0], [77.7, 722.0], [77.8, 722.0], [77.9, 722.0], [78.0, 731.0], [78.1, 731.0], [78.2, 731.0], [78.3, 731.0], [78.4, 731.0], [78.5, 731.0], [78.6, 731.0], [78.7, 731.0], [78.8, 731.0], [78.9, 731.0], [79.0, 742.0], [79.1, 742.0], [79.2, 742.0], [79.3, 742.0], [79.4, 742.0], [79.5, 742.0], [79.6, 742.0], [79.7, 742.0], [79.8, 742.0], [79.9, 742.0], [80.0, 746.0], [80.1, 746.0], [80.2, 746.0], [80.3, 746.0], [80.4, 746.0], [80.5, 746.0], [80.6, 746.0], [80.7, 746.0], [80.8, 746.0], [80.9, 746.0], [81.0, 754.0], [81.1, 754.0], [81.2, 754.0], [81.3, 754.0], [81.4, 754.0], [81.5, 754.0], [81.6, 754.0], [81.7, 754.0], [81.8, 754.0], [81.9, 754.0], [82.0, 769.0], [82.1, 769.0], [82.2, 769.0], [82.3, 769.0], [82.4, 769.0], [82.5, 769.0], [82.6, 769.0], [82.7, 769.0], [82.8, 769.0], [82.9, 769.0], [83.0, 822.0], [83.1, 822.0], [83.2, 822.0], [83.3, 822.0], [83.4, 822.0], [83.5, 822.0], [83.6, 822.0], [83.7, 822.0], [83.8, 822.0], [83.9, 822.0], [84.0, 875.0], [84.1, 875.0], [84.2, 875.0], [84.3, 875.0], [84.4, 875.0], [84.5, 875.0], [84.6, 875.0], [84.7, 875.0], [84.8, 875.0], [84.9, 875.0], [85.0, 888.0], [85.1, 888.0], [85.2, 888.0], [85.3, 888.0], [85.4, 888.0], [85.5, 888.0], [85.6, 888.0], [85.7, 888.0], [85.8, 888.0], [85.9, 888.0], [86.0, 913.0], [86.1, 913.0], [86.2, 913.0], [86.3, 913.0], [86.4, 913.0], [86.5, 913.0], [86.6, 913.0], [86.7, 913.0], [86.8, 913.0], [86.9, 913.0], [87.0, 964.0], [87.1, 964.0], [87.2, 964.0], [87.3, 964.0], [87.4, 964.0], [87.5, 964.0], [87.6, 964.0], [87.7, 964.0], [87.8, 964.0], [87.9, 964.0], [88.0, 1008.0], [88.1, 1008.0], [88.2, 1008.0], [88.3, 1008.0], [88.4, 1008.0], [88.5, 1008.0], [88.6, 1008.0], [88.7, 1008.0], [88.8, 1008.0], [88.9, 1008.0], [89.0, 1075.0], [89.1, 1075.0], [89.2, 1075.0], [89.3, 1075.0], [89.4, 1075.0], [89.5, 1075.0], [89.6, 1075.0], [89.7, 1075.0], [89.8, 1075.0], [89.9, 1075.0], [90.0, 1118.0], [90.1, 1118.0], [90.2, 1118.0], [90.3, 1118.0], [90.4, 1118.0], [90.5, 1118.0], [90.6, 1118.0], [90.7, 1118.0], [90.8, 1118.0], [90.9, 1118.0], [91.0, 1119.0], [91.1, 1119.0], [91.2, 1119.0], [91.3, 1119.0], [91.4, 1119.0], [91.5, 1119.0], [91.6, 1119.0], [91.7, 1119.0], [91.8, 1119.0], [91.9, 1119.0], [92.0, 1143.0], [92.1, 1143.0], [92.2, 1143.0], [92.3, 1143.0], [92.4, 1143.0], [92.5, 1143.0], [92.6, 1143.0], [92.7, 1143.0], [92.8, 1143.0], [92.9, 1143.0], [93.0, 1577.0], [93.1, 1577.0], [93.2, 1577.0], [93.3, 1577.0], [93.4, 1577.0], [93.5, 1577.0], [93.6, 1577.0], [93.7, 1577.0], [93.8, 1577.0], [93.9, 1577.0], [94.0, 1887.0], [94.1, 1887.0], [94.2, 1887.0], [94.3, 1887.0], [94.4, 1887.0], [94.5, 1887.0], [94.6, 1887.0], [94.7, 1887.0], [94.8, 1887.0], [94.9, 1887.0], [95.0, 2107.0], [95.1, 2107.0], [95.2, 2107.0], [95.3, 2107.0], [95.4, 2107.0], [95.5, 2107.0], [95.6, 2107.0], [95.7, 2107.0], [95.8, 2107.0], [95.9, 2107.0], [96.0, 2275.0], [96.1, 2275.0], [96.2, 2275.0], [96.3, 2275.0], [96.4, 2275.0], [96.5, 2275.0], [96.6, 2275.0], [96.7, 2275.0], [96.8, 2275.0], [96.9, 2275.0], [97.0, 2356.0], [97.1, 2356.0], [97.2, 2356.0], [97.3, 2356.0], [97.4, 2356.0], [97.5, 2356.0], [97.6, 2356.0], [97.7, 2356.0], [97.8, 2356.0], [97.9, 2356.0], [98.0, 2791.0], [98.1, 2791.0], [98.2, 2791.0], [98.3, 2791.0], [98.4, 2791.0], [98.5, 2791.0], [98.6, 2791.0], [98.7, 2791.0], [98.8, 2791.0], [98.9, 2791.0], [99.0, 2864.0], [99.1, 2864.0], [99.2, 2864.0], [99.3, 2864.0], [99.4, 2864.0], [99.5, 2864.0], [99.6, 2864.0], [99.7, 2864.0], [99.8, 2864.0], [99.9, 2864.0]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[0.0, 341.0], [0.1, 341.0], [0.2, 341.0], [0.3, 341.0], [0.4, 341.0], [0.5, 341.0], [0.6, 341.0], [0.7, 341.0], [0.8, 341.0], [0.9, 341.0], [1.0, 508.0], [1.1, 508.0], [1.2, 508.0], [1.3, 508.0], [1.4, 508.0], [1.5, 508.0], [1.6, 508.0], [1.7, 508.0], [1.8, 508.0], [1.9, 508.0], [2.0, 772.0], [2.1, 772.0], [2.2, 772.0], [2.3, 772.0], [2.4, 772.0], [2.5, 772.0], [2.6, 772.0], [2.7, 772.0], [2.8, 772.0], [2.9, 772.0], [3.0, 793.0], [3.1, 793.0], [3.2, 793.0], [3.3, 793.0], [3.4, 793.0], [3.5, 793.0], [3.6, 793.0], [3.7, 793.0], [3.8, 793.0], [3.9, 793.0], [4.0, 861.0], [4.1, 861.0], [4.2, 861.0], [4.3, 861.0], [4.4, 861.0], [4.5, 861.0], [4.6, 861.0], [4.7, 861.0], [4.8, 861.0], [4.9, 861.0], [5.0, 898.0], [5.1, 898.0], [5.2, 898.0], [5.3, 898.0], [5.4, 898.0], [5.5, 898.0], [5.6, 898.0], [5.7, 898.0], [5.8, 898.0], [5.9, 898.0], [6.0, 921.0], [6.1, 921.0], [6.2, 921.0], [6.3, 921.0], [6.4, 921.0], [6.5, 921.0], [6.6, 921.0], [6.7, 921.0], [6.8, 921.0], [6.9, 921.0], [7.0, 923.0], [7.1, 923.0], [7.2, 923.0], [7.3, 923.0], [7.4, 923.0], [7.5, 923.0], [7.6, 923.0], [7.7, 923.0], [7.8, 923.0], [7.9, 923.0], [8.0, 930.0], [8.1, 930.0], [8.2, 930.0], [8.3, 930.0], [8.4, 930.0], [8.5, 930.0], [8.6, 930.0], [8.7, 930.0], [8.8, 930.0], [8.9, 930.0], [9.0, 943.0], [9.1, 943.0], [9.2, 943.0], [9.3, 943.0], [9.4, 943.0], [9.5, 943.0], [9.6, 943.0], [9.7, 943.0], [9.8, 943.0], [9.9, 943.0], [10.0, 952.0], [10.1, 952.0], [10.2, 952.0], [10.3, 952.0], [10.4, 952.0], [10.5, 952.0], [10.6, 952.0], [10.7, 952.0], [10.8, 952.0], [10.9, 952.0], [11.0, 956.0], [11.1, 956.0], [11.2, 956.0], [11.3, 956.0], [11.4, 956.0], [11.5, 956.0], [11.6, 956.0], [11.7, 956.0], [11.8, 956.0], [11.9, 956.0], [12.0, 959.0], [12.1, 959.0], [12.2, 959.0], [12.3, 959.0], [12.4, 959.0], [12.5, 959.0], [12.6, 959.0], [12.7, 959.0], [12.8, 959.0], [12.9, 959.0], [13.0, 1006.0], [13.1, 1006.0], [13.2, 1006.0], [13.3, 1006.0], [13.4, 1006.0], [13.5, 1006.0], [13.6, 1006.0], [13.7, 1006.0], [13.8, 1006.0], [13.9, 1006.0], [14.0, 1028.0], [14.1, 1028.0], [14.2, 1028.0], [14.3, 1028.0], [14.4, 1028.0], [14.5, 1028.0], [14.6, 1028.0], [14.7, 1028.0], [14.8, 1028.0], [14.9, 1028.0], [15.0, 1031.0], [15.1, 1031.0], [15.2, 1031.0], [15.3, 1031.0], [15.4, 1031.0], [15.5, 1031.0], [15.6, 1031.0], [15.7, 1031.0], [15.8, 1031.0], [15.9, 1031.0], [16.0, 1045.0], [16.1, 1045.0], [16.2, 1045.0], [16.3, 1045.0], [16.4, 1045.0], [16.5, 1045.0], [16.6, 1045.0], [16.7, 1045.0], [16.8, 1045.0], [16.9, 1045.0], [17.0, 1048.0], [17.1, 1048.0], [17.2, 1048.0], [17.3, 1048.0], [17.4, 1048.0], [17.5, 1048.0], [17.6, 1048.0], [17.7, 1048.0], [17.8, 1048.0], [17.9, 1048.0], [18.0, 1081.0], [18.1, 1081.0], [18.2, 1081.0], [18.3, 1081.0], [18.4, 1081.0], [18.5, 1081.0], [18.6, 1081.0], [18.7, 1081.0], [18.8, 1081.0], [18.9, 1081.0], [19.0, 1083.0], [19.1, 1083.0], [19.2, 1083.0], [19.3, 1083.0], [19.4, 1083.0], [19.5, 1083.0], [19.6, 1083.0], [19.7, 1083.0], [19.8, 1083.0], [19.9, 1083.0], [20.0, 1135.0], [20.1, 1135.0], [20.2, 1135.0], [20.3, 1135.0], [20.4, 1135.0], [20.5, 1135.0], [20.6, 1135.0], [20.7, 1135.0], [20.8, 1135.0], [20.9, 1135.0], [21.0, 1150.0], [21.1, 1150.0], [21.2, 1150.0], [21.3, 1150.0], [21.4, 1150.0], [21.5, 1150.0], [21.6, 1150.0], [21.7, 1150.0], [21.8, 1150.0], [21.9, 1150.0], [22.0, 1153.0], [22.1, 1153.0], [22.2, 1153.0], [22.3, 1153.0], [22.4, 1153.0], [22.5, 1153.0], [22.6, 1153.0], [22.7, 1153.0], [22.8, 1153.0], [22.9, 1153.0], [23.0, 1170.0], [23.1, 1170.0], [23.2, 1170.0], [23.3, 1170.0], [23.4, 1170.0], [23.5, 1170.0], [23.6, 1170.0], [23.7, 1170.0], [23.8, 1170.0], [23.9, 1170.0], [24.0, 1179.0], [24.1, 1179.0], [24.2, 1179.0], [24.3, 1179.0], [24.4, 1179.0], [24.5, 1179.0], [24.6, 1179.0], [24.7, 1179.0], [24.8, 1179.0], [24.9, 1179.0], [25.0, 1185.0], [25.1, 1185.0], [25.2, 1185.0], [25.3, 1185.0], [25.4, 1185.0], [25.5, 1185.0], [25.6, 1185.0], [25.7, 1185.0], [25.8, 1185.0], [25.9, 1185.0], [26.0, 1189.0], [26.1, 1189.0], [26.2, 1189.0], [26.3, 1189.0], [26.4, 1189.0], [26.5, 1189.0], [26.6, 1189.0], [26.7, 1189.0], [26.8, 1189.0], [26.9, 1189.0], [27.0, 1190.0], [27.1, 1190.0], [27.2, 1190.0], [27.3, 1190.0], [27.4, 1190.0], [27.5, 1190.0], [27.6, 1190.0], [27.7, 1190.0], [27.8, 1190.0], [27.9, 1190.0], [28.0, 1227.0], [28.1, 1227.0], [28.2, 1227.0], [28.3, 1227.0], [28.4, 1227.0], [28.5, 1227.0], [28.6, 1227.0], [28.7, 1227.0], [28.8, 1227.0], [28.9, 1227.0], [29.0, 1231.0], [29.1, 1231.0], [29.2, 1231.0], [29.3, 1231.0], [29.4, 1231.0], [29.5, 1231.0], [29.6, 1231.0], [29.7, 1231.0], [29.8, 1231.0], [29.9, 1231.0], [30.0, 1240.0], [30.1, 1240.0], [30.2, 1240.0], [30.3, 1240.0], [30.4, 1240.0], [30.5, 1240.0], [30.6, 1240.0], [30.7, 1240.0], [30.8, 1240.0], [30.9, 1240.0], [31.0, 1254.0], [31.1, 1254.0], [31.2, 1254.0], [31.3, 1254.0], [31.4, 1254.0], [31.5, 1254.0], [31.6, 1254.0], [31.7, 1254.0], [31.8, 1254.0], [31.9, 1254.0], [32.0, 1260.0], [32.1, 1260.0], [32.2, 1260.0], [32.3, 1260.0], [32.4, 1260.0], [32.5, 1260.0], [32.6, 1260.0], [32.7, 1260.0], [32.8, 1260.0], [32.9, 1260.0], [33.0, 1275.0], [33.1, 1275.0], [33.2, 1275.0], [33.3, 1275.0], [33.4, 1275.0], [33.5, 1275.0], [33.6, 1275.0], [33.7, 1275.0], [33.8, 1275.0], [33.9, 1275.0], [34.0, 1292.0], [34.1, 1292.0], [34.2, 1292.0], [34.3, 1292.0], [34.4, 1292.0], [34.5, 1292.0], [34.6, 1292.0], [34.7, 1292.0], [34.8, 1292.0], [34.9, 1292.0], [35.0, 1304.0], [35.1, 1304.0], [35.2, 1304.0], [35.3, 1304.0], [35.4, 1304.0], [35.5, 1304.0], [35.6, 1304.0], [35.7, 1304.0], [35.8, 1304.0], [35.9, 1304.0], [36.0, 1309.0], [36.1, 1309.0], [36.2, 1309.0], [36.3, 1309.0], [36.4, 1309.0], [36.5, 1309.0], [36.6, 1309.0], [36.7, 1309.0], [36.8, 1309.0], [36.9, 1309.0], [37.0, 1316.0], [37.1, 1316.0], [37.2, 1316.0], [37.3, 1316.0], [37.4, 1316.0], [37.5, 1316.0], [37.6, 1316.0], [37.7, 1316.0], [37.8, 1316.0], [37.9, 1316.0], [38.0, 1329.0], [38.1, 1329.0], [38.2, 1329.0], [38.3, 1329.0], [38.4, 1329.0], [38.5, 1329.0], [38.6, 1329.0], [38.7, 1329.0], [38.8, 1329.0], [38.9, 1329.0], [39.0, 1347.0], [39.1, 1347.0], [39.2, 1347.0], [39.3, 1347.0], [39.4, 1347.0], [39.5, 1347.0], [39.6, 1347.0], [39.7, 1347.0], [39.8, 1347.0], [39.9, 1347.0], [40.0, 1356.0], [40.1, 1356.0], [40.2, 1356.0], [40.3, 1356.0], [40.4, 1356.0], [40.5, 1356.0], [40.6, 1356.0], [40.7, 1356.0], [40.8, 1356.0], [40.9, 1356.0], [41.0, 1376.0], [41.1, 1376.0], [41.2, 1376.0], [41.3, 1376.0], [41.4, 1376.0], [41.5, 1376.0], [41.6, 1376.0], [41.7, 1376.0], [41.8, 1376.0], [41.9, 1376.0], [42.0, 1379.0], [42.1, 1379.0], [42.2, 1379.0], [42.3, 1379.0], [42.4, 1379.0], [42.5, 1379.0], [42.6, 1379.0], [42.7, 1379.0], [42.8, 1379.0], [42.9, 1379.0], [43.0, 1379.0], [43.1, 1379.0], [43.2, 1379.0], [43.3, 1379.0], [43.4, 1379.0], [43.5, 1379.0], [43.6, 1379.0], [43.7, 1379.0], [43.8, 1379.0], [43.9, 1379.0], [44.0, 1395.0], [44.1, 1395.0], [44.2, 1395.0], [44.3, 1395.0], [44.4, 1395.0], [44.5, 1395.0], [44.6, 1395.0], [44.7, 1395.0], [44.8, 1395.0], [44.9, 1395.0], [45.0, 1403.0], [45.1, 1403.0], [45.2, 1403.0], [45.3, 1403.0], [45.4, 1403.0], [45.5, 1403.0], [45.6, 1403.0], [45.7, 1403.0], [45.8, 1403.0], [45.9, 1403.0], [46.0, 1409.0], [46.1, 1409.0], [46.2, 1409.0], [46.3, 1409.0], [46.4, 1409.0], [46.5, 1409.0], [46.6, 1409.0], [46.7, 1409.0], [46.8, 1409.0], [46.9, 1409.0], [47.0, 1422.0], [47.1, 1422.0], [47.2, 1422.0], [47.3, 1422.0], [47.4, 1422.0], [47.5, 1422.0], [47.6, 1422.0], [47.7, 1422.0], [47.8, 1422.0], [47.9, 1422.0], [48.0, 1426.0], [48.1, 1426.0], [48.2, 1426.0], [48.3, 1426.0], [48.4, 1426.0], [48.5, 1426.0], [48.6, 1426.0], [48.7, 1426.0], [48.8, 1426.0], [48.9, 1426.0], [49.0, 1429.0], [49.1, 1429.0], [49.2, 1429.0], [49.3, 1429.0], [49.4, 1429.0], [49.5, 1429.0], [49.6, 1429.0], [49.7, 1429.0], [49.8, 1429.0], [49.9, 1429.0], [50.0, 1439.0], [50.1, 1439.0], [50.2, 1439.0], [50.3, 1439.0], [50.4, 1439.0], [50.5, 1439.0], [50.6, 1439.0], [50.7, 1439.0], [50.8, 1439.0], [50.9, 1439.0], [51.0, 1440.0], [51.1, 1440.0], [51.2, 1440.0], [51.3, 1440.0], [51.4, 1440.0], [51.5, 1440.0], [51.6, 1440.0], [51.7, 1440.0], [51.8, 1440.0], [51.9, 1440.0], [52.0, 1449.0], [52.1, 1449.0], [52.2, 1449.0], [52.3, 1449.0], [52.4, 1449.0], [52.5, 1449.0], [52.6, 1449.0], [52.7, 1449.0], [52.8, 1449.0], [52.9, 1449.0], [53.0, 1461.0], [53.1, 1461.0], [53.2, 1461.0], [53.3, 1461.0], [53.4, 1461.0], [53.5, 1461.0], [53.6, 1461.0], [53.7, 1461.0], [53.8, 1461.0], [53.9, 1461.0], [54.0, 1461.0], [54.1, 1461.0], [54.2, 1461.0], [54.3, 1461.0], [54.4, 1461.0], [54.5, 1461.0], [54.6, 1461.0], [54.7, 1461.0], [54.8, 1461.0], [54.9, 1461.0], [55.0, 1466.0], [55.1, 1466.0], [55.2, 1466.0], [55.3, 1466.0], [55.4, 1466.0], [55.5, 1466.0], [55.6, 1466.0], [55.7, 1466.0], [55.8, 1466.0], [55.9, 1466.0], [56.0, 1473.0], [56.1, 1473.0], [56.2, 1473.0], [56.3, 1473.0], [56.4, 1473.0], [56.5, 1473.0], [56.6, 1473.0], [56.7, 1473.0], [56.8, 1473.0], [56.9, 1473.0], [57.0, 1477.0], [57.1, 1477.0], [57.2, 1477.0], [57.3, 1477.0], [57.4, 1477.0], [57.5, 1477.0], [57.6, 1477.0], [57.7, 1477.0], [57.8, 1477.0], [57.9, 1477.0], [58.0, 1479.0], [58.1, 1479.0], [58.2, 1479.0], [58.3, 1479.0], [58.4, 1479.0], [58.5, 1479.0], [58.6, 1479.0], [58.7, 1479.0], [58.8, 1479.0], [58.9, 1479.0], [59.0, 1496.0], [59.1, 1496.0], [59.2, 1496.0], [59.3, 1496.0], [59.4, 1496.0], [59.5, 1496.0], [59.6, 1496.0], [59.7, 1496.0], [59.8, 1496.0], [59.9, 1496.0], [60.0, 1502.0], [60.1, 1502.0], [60.2, 1502.0], [60.3, 1502.0], [60.4, 1502.0], [60.5, 1502.0], [60.6, 1502.0], [60.7, 1502.0], [60.8, 1502.0], [60.9, 1502.0], [61.0, 1527.0], [61.1, 1527.0], [61.2, 1527.0], [61.3, 1527.0], [61.4, 1527.0], [61.5, 1527.0], [61.6, 1527.0], [61.7, 1527.0], [61.8, 1527.0], [61.9, 1527.0], [62.0, 1534.0], [62.1, 1534.0], [62.2, 1534.0], [62.3, 1534.0], [62.4, 1534.0], [62.5, 1534.0], [62.6, 1534.0], [62.7, 1534.0], [62.8, 1534.0], [62.9, 1534.0], [63.0, 1540.0], [63.1, 1540.0], [63.2, 1540.0], [63.3, 1540.0], [63.4, 1540.0], [63.5, 1540.0], [63.6, 1540.0], [63.7, 1540.0], [63.8, 1540.0], [63.9, 1540.0], [64.0, 1555.0], [64.1, 1555.0], [64.2, 1555.0], [64.3, 1555.0], [64.4, 1555.0], [64.5, 1555.0], [64.6, 1555.0], [64.7, 1555.0], [64.8, 1555.0], [64.9, 1555.0], [65.0, 1562.0], [65.1, 1562.0], [65.2, 1562.0], [65.3, 1562.0], [65.4, 1562.0], [65.5, 1562.0], [65.6, 1562.0], [65.7, 1562.0], [65.8, 1562.0], [65.9, 1562.0], [66.0, 1570.0], [66.1, 1570.0], [66.2, 1570.0], [66.3, 1570.0], [66.4, 1570.0], [66.5, 1570.0], [66.6, 1570.0], [66.7, 1570.0], [66.8, 1570.0], [66.9, 1570.0], [67.0, 1571.0], [67.1, 1571.0], [67.2, 1571.0], [67.3, 1571.0], [67.4, 1571.0], [67.5, 1571.0], [67.6, 1571.0], [67.7, 1571.0], [67.8, 1571.0], [67.9, 1571.0], [68.0, 1578.0], [68.1, 1578.0], [68.2, 1578.0], [68.3, 1578.0], [68.4, 1578.0], [68.5, 1578.0], [68.6, 1578.0], [68.7, 1578.0], [68.8, 1578.0], [68.9, 1578.0], [69.0, 1579.0], [69.1, 1579.0], [69.2, 1579.0], [69.3, 1579.0], [69.4, 1579.0], [69.5, 1579.0], [69.6, 1579.0], [69.7, 1579.0], [69.8, 1579.0], [69.9, 1579.0], [70.0, 1593.0], [70.1, 1593.0], [70.2, 1593.0], [70.3, 1593.0], [70.4, 1593.0], [70.5, 1593.0], [70.6, 1593.0], [70.7, 1593.0], [70.8, 1593.0], [70.9, 1593.0], [71.0, 1596.0], [71.1, 1596.0], [71.2, 1596.0], [71.3, 1596.0], [71.4, 1596.0], [71.5, 1596.0], [71.6, 1596.0], [71.7, 1596.0], [71.8, 1596.0], [71.9, 1596.0], [72.0, 1597.0], [72.1, 1597.0], [72.2, 1597.0], [72.3, 1597.0], [72.4, 1597.0], [72.5, 1597.0], [72.6, 1597.0], [72.7, 1597.0], [72.8, 1597.0], [72.9, 1597.0], [73.0, 1601.0], [73.1, 1601.0], [73.2, 1601.0], [73.3, 1601.0], [73.4, 1601.0], [73.5, 1601.0], [73.6, 1601.0], [73.7, 1601.0], [73.8, 1601.0], [73.9, 1601.0], [74.0, 1602.0], [74.1, 1602.0], [74.2, 1602.0], [74.3, 1602.0], [74.4, 1602.0], [74.5, 1602.0], [74.6, 1602.0], [74.7, 1602.0], [74.8, 1602.0], [74.9, 1602.0], [75.0, 1616.0], [75.1, 1616.0], [75.2, 1616.0], [75.3, 1616.0], [75.4, 1616.0], [75.5, 1616.0], [75.6, 1616.0], [75.7, 1616.0], [75.8, 1616.0], [75.9, 1616.0], [76.0, 1616.0], [76.1, 1616.0], [76.2, 1616.0], [76.3, 1616.0], [76.4, 1616.0], [76.5, 1616.0], [76.6, 1616.0], [76.7, 1616.0], [76.8, 1616.0], [76.9, 1616.0], [77.0, 1624.0], [77.1, 1624.0], [77.2, 1624.0], [77.3, 1624.0], [77.4, 1624.0], [77.5, 1624.0], [77.6, 1624.0], [77.7, 1624.0], [77.8, 1624.0], [77.9, 1624.0], [78.0, 1655.0], [78.1, 1655.0], [78.2, 1655.0], [78.3, 1655.0], [78.4, 1655.0], [78.5, 1655.0], [78.6, 1655.0], [78.7, 1655.0], [78.8, 1655.0], [78.9, 1655.0], [79.0, 1660.0], [79.1, 1660.0], [79.2, 1660.0], [79.3, 1660.0], [79.4, 1660.0], [79.5, 1660.0], [79.6, 1660.0], [79.7, 1660.0], [79.8, 1660.0], [79.9, 1660.0], [80.0, 1664.0], [80.1, 1664.0], [80.2, 1664.0], [80.3, 1664.0], [80.4, 1664.0], [80.5, 1664.0], [80.6, 1664.0], [80.7, 1664.0], [80.8, 1664.0], [80.9, 1664.0], [81.0, 1673.0], [81.1, 1673.0], [81.2, 1673.0], [81.3, 1673.0], [81.4, 1673.0], [81.5, 1673.0], [81.6, 1673.0], [81.7, 1673.0], [81.8, 1673.0], [81.9, 1673.0], [82.0, 1678.0], [82.1, 1678.0], [82.2, 1678.0], [82.3, 1678.0], [82.4, 1678.0], [82.5, 1678.0], [82.6, 1678.0], [82.7, 1678.0], [82.8, 1678.0], [82.9, 1678.0], [83.0, 1688.0], [83.1, 1688.0], [83.2, 1688.0], [83.3, 1688.0], [83.4, 1688.0], [83.5, 1688.0], [83.6, 1688.0], [83.7, 1688.0], [83.8, 1688.0], [83.9, 1688.0], [84.0, 1739.0], [84.1, 1739.0], [84.2, 1739.0], [84.3, 1739.0], [84.4, 1739.0], [84.5, 1739.0], [84.6, 1739.0], [84.7, 1739.0], [84.8, 1739.0], [84.9, 1739.0], [85.0, 1747.0], [85.1, 1747.0], [85.2, 1747.0], [85.3, 1747.0], [85.4, 1747.0], [85.5, 1747.0], [85.6, 1747.0], [85.7, 1747.0], [85.8, 1747.0], [85.9, 1747.0], [86.0, 1810.0], [86.1, 1810.0], [86.2, 1810.0], [86.3, 1810.0], [86.4, 1810.0], [86.5, 1810.0], [86.6, 1810.0], [86.7, 1810.0], [86.8, 1810.0], [86.9, 1810.0], [87.0, 1882.0], [87.1, 1882.0], [87.2, 1882.0], [87.3, 1882.0], [87.4, 1882.0], [87.5, 1882.0], [87.6, 1882.0], [87.7, 1882.0], [87.8, 1882.0], [87.9, 1882.0], [88.0, 1889.0], [88.1, 1889.0], [88.2, 1889.0], [88.3, 1889.0], [88.4, 1889.0], [88.5, 1889.0], [88.6, 1889.0], [88.7, 1889.0], [88.8, 1889.0], [88.9, 1889.0], [89.0, 1963.0], [89.1, 1963.0], [89.2, 1963.0], [89.3, 1963.0], [89.4, 1963.0], [89.5, 1963.0], [89.6, 1963.0], [89.7, 1963.0], [89.8, 1963.0], [89.9, 1963.0], [90.0, 2277.0], [90.1, 2277.0], [90.2, 2277.0], [90.3, 2277.0], [90.4, 2277.0], [90.5, 2277.0], [90.6, 2277.0], [90.7, 2277.0], [90.8, 2277.0], [90.9, 2277.0], [91.0, 2421.0], [91.1, 2421.0], [91.2, 2421.0], [91.3, 2421.0], [91.4, 2421.0], [91.5, 2421.0], [91.6, 2421.0], [91.7, 2421.0], [91.8, 2421.0], [91.9, 2421.0], [92.0, 2440.0], [92.1, 2440.0], [92.2, 2440.0], [92.3, 2440.0], [92.4, 2440.0], [92.5, 2440.0], [92.6, 2440.0], [92.7, 2440.0], [92.8, 2440.0], [92.9, 2440.0], [93.0, 2473.0], [93.1, 2473.0], [93.2, 2473.0], [93.3, 2473.0], [93.4, 2473.0], [93.5, 2473.0], [93.6, 2473.0], [93.7, 2473.0], [93.8, 2473.0], [93.9, 2473.0], [94.0, 2677.0], [94.1, 2677.0], [94.2, 2677.0], [94.3, 2677.0], [94.4, 2677.0], [94.5, 2677.0], [94.6, 2677.0], [94.7, 2677.0], [94.8, 2677.0], [94.9, 2677.0], [95.0, 2766.0], [95.1, 2766.0], [95.2, 2766.0], [95.3, 2766.0], [95.4, 2766.0], [95.5, 2766.0], [95.6, 2766.0], [95.7, 2766.0], [95.8, 2766.0], [95.9, 2766.0], [96.0, 3174.0], [96.1, 3174.0], [96.2, 3174.0], [96.3, 3174.0], [96.4, 3174.0], [96.5, 3174.0], [96.6, 3174.0], [96.7, 3174.0], [96.8, 3174.0], [96.9, 3174.0], [97.0, 3250.0], [97.1, 3250.0], [97.2, 3250.0], [97.3, 3250.0], [97.4, 3250.0], [97.5, 3250.0], [97.6, 3250.0], [97.7, 3250.0], [97.8, 3250.0], [97.9, 3250.0], [98.0, 3270.0], [98.1, 3270.0], [98.2, 3270.0], [98.3, 3270.0], [98.4, 3270.0], [98.5, 3270.0], [98.6, 3270.0], [98.7, 3270.0], [98.8, 3270.0], [98.9, 3270.0], [99.0, 3291.0], [99.1, 3291.0], [99.2, 3291.0], [99.3, 3291.0], [99.4, 3291.0], [99.5, 3291.0], [99.6, 3291.0], [99.7, 3291.0], [99.8, 3291.0], [99.9, 3291.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[0.0, 104.0], [0.1, 104.0], [0.2, 104.0], [0.3, 104.0], [0.4, 104.0], [0.5, 104.0], [0.6, 104.0], [0.7, 104.0], [0.8, 104.0], [0.9, 104.0], [1.0, 109.0], [1.1, 109.0], [1.2, 109.0], [1.3, 109.0], [1.4, 109.0], [1.5, 109.0], [1.6, 109.0], [1.7, 109.0], [1.8, 109.0], [1.9, 109.0], [2.0, 336.0], [2.1, 336.0], [2.2, 336.0], [2.3, 336.0], [2.4, 336.0], [2.5, 336.0], [2.6, 336.0], [2.7, 336.0], [2.8, 336.0], [2.9, 336.0], [3.0, 389.0], [3.1, 389.0], [3.2, 389.0], [3.3, 389.0], [3.4, 389.0], [3.5, 389.0], [3.6, 389.0], [3.7, 389.0], [3.8, 389.0], [3.9, 389.0], [4.0, 446.0], [4.1, 446.0], [4.2, 446.0], [4.3, 446.0], [4.4, 446.0], [4.5, 446.0], [4.6, 446.0], [4.7, 446.0], [4.8, 446.0], [4.9, 446.0], [5.0, 446.0], [5.1, 446.0], [5.2, 446.0], [5.3, 446.0], [5.4, 446.0], [5.5, 446.0], [5.6, 446.0], [5.7, 446.0], [5.8, 446.0], [5.9, 446.0], [6.0, 450.0], [6.1, 450.0], [6.2, 450.0], [6.3, 450.0], [6.4, 450.0], [6.5, 450.0], [6.6, 450.0], [6.7, 450.0], [6.8, 450.0], [6.9, 450.0], [7.0, 451.0], [7.1, 451.0], [7.2, 451.0], [7.3, 451.0], [7.4, 451.0], [7.5, 451.0], [7.6, 451.0], [7.7, 451.0], [7.8, 451.0], [7.9, 451.0], [8.0, 451.0], [8.1, 451.0], [8.2, 451.0], [8.3, 451.0], [8.4, 451.0], [8.5, 451.0], [8.6, 451.0], [8.7, 451.0], [8.8, 451.0], [8.9, 451.0], [9.0, 453.0], [9.1, 453.0], [9.2, 453.0], [9.3, 453.0], [9.4, 453.0], [9.5, 453.0], [9.6, 453.0], [9.7, 453.0], [9.8, 453.0], [9.9, 453.0], [10.0, 460.0], [10.1, 460.0], [10.2, 460.0], [10.3, 460.0], [10.4, 460.0], [10.5, 460.0], [10.6, 460.0], [10.7, 460.0], [10.8, 460.0], [10.9, 460.0], [11.0, 462.0], [11.1, 462.0], [11.2, 462.0], [11.3, 462.0], [11.4, 462.0], [11.5, 462.0], [11.6, 462.0], [11.7, 462.0], [11.8, 462.0], [11.9, 462.0], [12.0, 471.0], [12.1, 471.0], [12.2, 471.0], [12.3, 471.0], [12.4, 471.0], [12.5, 471.0], [12.6, 471.0], [12.7, 471.0], [12.8, 471.0], [12.9, 471.0], [13.0, 484.0], [13.1, 484.0], [13.2, 484.0], [13.3, 484.0], [13.4, 484.0], [13.5, 484.0], [13.6, 484.0], [13.7, 484.0], [13.8, 484.0], [13.9, 484.0], [14.0, 485.0], [14.1, 485.0], [14.2, 485.0], [14.3, 485.0], [14.4, 485.0], [14.5, 485.0], [14.6, 485.0], [14.7, 485.0], [14.8, 485.0], [14.9, 485.0], [15.0, 485.0], [15.1, 485.0], [15.2, 485.0], [15.3, 485.0], [15.4, 485.0], [15.5, 485.0], [15.6, 485.0], [15.7, 485.0], [15.8, 485.0], [15.9, 485.0], [16.0, 494.0], [16.1, 494.0], [16.2, 494.0], [16.3, 494.0], [16.4, 494.0], [16.5, 494.0], [16.6, 494.0], [16.7, 494.0], [16.8, 494.0], [16.9, 494.0], [17.0, 495.0], [17.1, 495.0], [17.2, 495.0], [17.3, 495.0], [17.4, 495.0], [17.5, 495.0], [17.6, 495.0], [17.7, 495.0], [17.8, 495.0], [17.9, 495.0], [18.0, 513.0], [18.1, 513.0], [18.2, 513.0], [18.3, 513.0], [18.4, 513.0], [18.5, 513.0], [18.6, 513.0], [18.7, 513.0], [18.8, 513.0], [18.9, 513.0], [19.0, 519.0], [19.1, 519.0], [19.2, 519.0], [19.3, 519.0], [19.4, 519.0], [19.5, 519.0], [19.6, 519.0], [19.7, 519.0], [19.8, 519.0], [19.9, 519.0], [20.0, 542.0], [20.1, 542.0], [20.2, 542.0], [20.3, 542.0], [20.4, 542.0], [20.5, 542.0], [20.6, 542.0], [20.7, 542.0], [20.8, 542.0], [20.9, 542.0], [21.0, 554.0], [21.1, 554.0], [21.2, 554.0], [21.3, 554.0], [21.4, 554.0], [21.5, 554.0], [21.6, 554.0], [21.7, 554.0], [21.8, 554.0], [21.9, 554.0], [22.0, 562.0], [22.1, 562.0], [22.2, 562.0], [22.3, 562.0], [22.4, 562.0], [22.5, 562.0], [22.6, 562.0], [22.7, 562.0], [22.8, 562.0], [22.9, 562.0], [23.0, 565.0], [23.1, 565.0], [23.2, 565.0], [23.3, 565.0], [23.4, 565.0], [23.5, 565.0], [23.6, 565.0], [23.7, 565.0], [23.8, 565.0], [23.9, 565.0], [24.0, 576.0], [24.1, 576.0], [24.2, 576.0], [24.3, 576.0], [24.4, 576.0], [24.5, 576.0], [24.6, 576.0], [24.7, 576.0], [24.8, 576.0], [24.9, 576.0], [25.0, 577.0], [25.1, 577.0], [25.2, 577.0], [25.3, 577.0], [25.4, 577.0], [25.5, 577.0], [25.6, 577.0], [25.7, 577.0], [25.8, 577.0], [25.9, 577.0], [26.0, 582.0], [26.1, 582.0], [26.2, 582.0], [26.3, 582.0], [26.4, 582.0], [26.5, 582.0], [26.6, 582.0], [26.7, 582.0], [26.8, 582.0], [26.9, 582.0], [27.0, 588.0], [27.1, 588.0], [27.2, 588.0], [27.3, 588.0], [27.4, 588.0], [27.5, 588.0], [27.6, 588.0], [27.7, 588.0], [27.8, 588.0], [27.9, 588.0], [28.0, 591.0], [28.1, 591.0], [28.2, 591.0], [28.3, 591.0], [28.4, 591.0], [28.5, 591.0], [28.6, 591.0], [28.7, 591.0], [28.8, 591.0], [28.9, 591.0], [29.0, 602.0], [29.1, 602.0], [29.2, 602.0], [29.3, 602.0], [29.4, 602.0], [29.5, 602.0], [29.6, 602.0], [29.7, 602.0], [29.8, 602.0], [29.9, 602.0], [30.0, 614.0], [30.1, 614.0], [30.2, 614.0], [30.3, 614.0], [30.4, 614.0], [30.5, 614.0], [30.6, 614.0], [30.7, 614.0], [30.8, 614.0], [30.9, 614.0], [31.0, 626.0], [31.1, 626.0], [31.2, 626.0], [31.3, 626.0], [31.4, 626.0], [31.5, 626.0], [31.6, 626.0], [31.7, 626.0], [31.8, 626.0], [31.9, 626.0], [32.0, 664.0], [32.1, 664.0], [32.2, 664.0], [32.3, 664.0], [32.4, 664.0], [32.5, 664.0], [32.6, 664.0], [32.7, 664.0], [32.8, 664.0], [32.9, 664.0], [33.0, 671.0], [33.1, 671.0], [33.2, 671.0], [33.3, 671.0], [33.4, 671.0], [33.5, 671.0], [33.6, 671.0], [33.7, 671.0], [33.8, 671.0], [33.9, 671.0], [34.0, 676.0], [34.1, 676.0], [34.2, 676.0], [34.3, 676.0], [34.4, 676.0], [34.5, 676.0], [34.6, 676.0], [34.7, 676.0], [34.8, 676.0], [34.9, 676.0], [35.0, 677.0], [35.1, 677.0], [35.2, 677.0], [35.3, 677.0], [35.4, 677.0], [35.5, 677.0], [35.6, 677.0], [35.7, 677.0], [35.8, 677.0], [35.9, 677.0], [36.0, 689.0], [36.1, 689.0], [36.2, 689.0], [36.3, 689.0], [36.4, 689.0], [36.5, 689.0], [36.6, 689.0], [36.7, 689.0], [36.8, 689.0], [36.9, 689.0], [37.0, 696.0], [37.1, 696.0], [37.2, 696.0], [37.3, 696.0], [37.4, 696.0], [37.5, 696.0], [37.6, 696.0], [37.7, 696.0], [37.8, 696.0], [37.9, 696.0], [38.0, 696.0], [38.1, 696.0], [38.2, 696.0], [38.3, 696.0], [38.4, 696.0], [38.5, 696.0], [38.6, 696.0], [38.7, 696.0], [38.8, 696.0], [38.9, 696.0], [39.0, 712.0], [39.1, 712.0], [39.2, 712.0], [39.3, 712.0], [39.4, 712.0], [39.5, 712.0], [39.6, 712.0], [39.7, 712.0], [39.8, 712.0], [39.9, 712.0], [40.0, 714.0], [40.1, 714.0], [40.2, 714.0], [40.3, 714.0], [40.4, 714.0], [40.5, 714.0], [40.6, 714.0], [40.7, 714.0], [40.8, 714.0], [40.9, 714.0], [41.0, 716.0], [41.1, 716.0], [41.2, 716.0], [41.3, 716.0], [41.4, 716.0], [41.5, 716.0], [41.6, 716.0], [41.7, 716.0], [41.8, 716.0], [41.9, 716.0], [42.0, 717.0], [42.1, 717.0], [42.2, 717.0], [42.3, 717.0], [42.4, 717.0], [42.5, 717.0], [42.6, 717.0], [42.7, 717.0], [42.8, 717.0], [42.9, 717.0], [43.0, 718.0], [43.1, 718.0], [43.2, 718.0], [43.3, 718.0], [43.4, 718.0], [43.5, 718.0], [43.6, 718.0], [43.7, 718.0], [43.8, 718.0], [43.9, 718.0], [44.0, 719.0], [44.1, 719.0], [44.2, 719.0], [44.3, 719.0], [44.4, 719.0], [44.5, 719.0], [44.6, 719.0], [44.7, 719.0], [44.8, 719.0], [44.9, 719.0], [45.0, 723.0], [45.1, 723.0], [45.2, 723.0], [45.3, 723.0], [45.4, 723.0], [45.5, 723.0], [45.6, 723.0], [45.7, 723.0], [45.8, 723.0], [45.9, 723.0], [46.0, 735.0], [46.1, 735.0], [46.2, 735.0], [46.3, 735.0], [46.4, 735.0], [46.5, 735.0], [46.6, 735.0], [46.7, 735.0], [46.8, 735.0], [46.9, 735.0], [47.0, 749.0], [47.1, 749.0], [47.2, 749.0], [47.3, 749.0], [47.4, 749.0], [47.5, 749.0], [47.6, 749.0], [47.7, 749.0], [47.8, 749.0], [47.9, 749.0], [48.0, 753.0], [48.1, 753.0], [48.2, 753.0], [48.3, 753.0], [48.4, 753.0], [48.5, 753.0], [48.6, 753.0], [48.7, 753.0], [48.8, 753.0], [48.9, 753.0], [49.0, 759.0], [49.1, 759.0], [49.2, 759.0], [49.3, 759.0], [49.4, 759.0], [49.5, 759.0], [49.6, 759.0], [49.7, 759.0], [49.8, 759.0], [49.9, 759.0], [50.0, 765.0], [50.1, 765.0], [50.2, 765.0], [50.3, 765.0], [50.4, 765.0], [50.5, 765.0], [50.6, 765.0], [50.7, 765.0], [50.8, 765.0], [50.9, 765.0], [51.0, 769.0], [51.1, 769.0], [51.2, 769.0], [51.3, 769.0], [51.4, 769.0], [51.5, 769.0], [51.6, 769.0], [51.7, 769.0], [51.8, 769.0], [51.9, 769.0], [52.0, 774.0], [52.1, 774.0], [52.2, 774.0], [52.3, 774.0], [52.4, 774.0], [52.5, 774.0], [52.6, 774.0], [52.7, 774.0], [52.8, 774.0], [52.9, 774.0], [53.0, 775.0], [53.1, 775.0], [53.2, 775.0], [53.3, 775.0], [53.4, 775.0], [53.5, 775.0], [53.6, 775.0], [53.7, 775.0], [53.8, 775.0], [53.9, 775.0], [54.0, 775.0], [54.1, 775.0], [54.2, 775.0], [54.3, 775.0], [54.4, 775.0], [54.5, 775.0], [54.6, 775.0], [54.7, 775.0], [54.8, 775.0], [54.9, 775.0], [55.0, 780.0], [55.1, 780.0], [55.2, 780.0], [55.3, 780.0], [55.4, 780.0], [55.5, 780.0], [55.6, 780.0], [55.7, 780.0], [55.8, 780.0], [55.9, 780.0], [56.0, 791.0], [56.1, 791.0], [56.2, 791.0], [56.3, 791.0], [56.4, 791.0], [56.5, 791.0], [56.6, 791.0], [56.7, 791.0], [56.8, 791.0], [56.9, 791.0], [57.0, 795.0], [57.1, 795.0], [57.2, 795.0], [57.3, 795.0], [57.4, 795.0], [57.5, 795.0], [57.6, 795.0], [57.7, 795.0], [57.8, 795.0], [57.9, 795.0], [58.0, 799.0], [58.1, 799.0], [58.2, 799.0], [58.3, 799.0], [58.4, 799.0], [58.5, 799.0], [58.6, 799.0], [58.7, 799.0], [58.8, 799.0], [58.9, 799.0], [59.0, 804.0], [59.1, 804.0], [59.2, 804.0], [59.3, 804.0], [59.4, 804.0], [59.5, 804.0], [59.6, 804.0], [59.7, 804.0], [59.8, 804.0], [59.9, 804.0], [60.0, 808.0], [60.1, 808.0], [60.2, 808.0], [60.3, 808.0], [60.4, 808.0], [60.5, 808.0], [60.6, 808.0], [60.7, 808.0], [60.8, 808.0], [60.9, 808.0], [61.0, 827.0], [61.1, 827.0], [61.2, 827.0], [61.3, 827.0], [61.4, 827.0], [61.5, 827.0], [61.6, 827.0], [61.7, 827.0], [61.8, 827.0], [61.9, 827.0], [62.0, 828.0], [62.1, 828.0], [62.2, 828.0], [62.3, 828.0], [62.4, 828.0], [62.5, 828.0], [62.6, 828.0], [62.7, 828.0], [62.8, 828.0], [62.9, 828.0], [63.0, 829.0], [63.1, 829.0], [63.2, 829.0], [63.3, 829.0], [63.4, 829.0], [63.5, 829.0], [63.6, 829.0], [63.7, 829.0], [63.8, 829.0], [63.9, 829.0], [64.0, 833.0], [64.1, 833.0], [64.2, 833.0], [64.3, 833.0], [64.4, 833.0], [64.5, 833.0], [64.6, 833.0], [64.7, 833.0], [64.8, 833.0], [64.9, 833.0], [65.0, 834.0], [65.1, 834.0], [65.2, 834.0], [65.3, 834.0], [65.4, 834.0], [65.5, 834.0], [65.6, 834.0], [65.7, 834.0], [65.8, 834.0], [65.9, 834.0], [66.0, 839.0], [66.1, 839.0], [66.2, 839.0], [66.3, 839.0], [66.4, 839.0], [66.5, 839.0], [66.6, 839.0], [66.7, 839.0], [66.8, 839.0], [66.9, 839.0], [67.0, 839.0], [67.1, 839.0], [67.2, 839.0], [67.3, 839.0], [67.4, 839.0], [67.5, 839.0], [67.6, 839.0], [67.7, 839.0], [67.8, 839.0], [67.9, 839.0], [68.0, 840.0], [68.1, 840.0], [68.2, 840.0], [68.3, 840.0], [68.4, 840.0], [68.5, 840.0], [68.6, 840.0], [68.7, 840.0], [68.8, 840.0], [68.9, 840.0], [69.0, 842.0], [69.1, 842.0], [69.2, 842.0], [69.3, 842.0], [69.4, 842.0], [69.5, 842.0], [69.6, 842.0], [69.7, 842.0], [69.8, 842.0], [69.9, 842.0], [70.0, 849.0], [70.1, 849.0], [70.2, 849.0], [70.3, 849.0], [70.4, 849.0], [70.5, 849.0], [70.6, 849.0], [70.7, 849.0], [70.8, 849.0], [70.9, 849.0], [71.0, 850.0], [71.1, 850.0], [71.2, 850.0], [71.3, 850.0], [71.4, 850.0], [71.5, 850.0], [71.6, 850.0], [71.7, 850.0], [71.8, 850.0], [71.9, 850.0], [72.0, 882.0], [72.1, 882.0], [72.2, 882.0], [72.3, 882.0], [72.4, 882.0], [72.5, 882.0], [72.6, 882.0], [72.7, 882.0], [72.8, 882.0], [72.9, 882.0], [73.0, 883.0], [73.1, 883.0], [73.2, 883.0], [73.3, 883.0], [73.4, 883.0], [73.5, 883.0], [73.6, 883.0], [73.7, 883.0], [73.8, 883.0], [73.9, 883.0], [74.0, 883.0], [74.1, 883.0], [74.2, 883.0], [74.3, 883.0], [74.4, 883.0], [74.5, 883.0], [74.6, 883.0], [74.7, 883.0], [74.8, 883.0], [74.9, 883.0], [75.0, 890.0], [75.1, 890.0], [75.2, 890.0], [75.3, 890.0], [75.4, 890.0], [75.5, 890.0], [75.6, 890.0], [75.7, 890.0], [75.8, 890.0], [75.9, 890.0], [76.0, 891.0], [76.1, 891.0], [76.2, 891.0], [76.3, 891.0], [76.4, 891.0], [76.5, 891.0], [76.6, 891.0], [76.7, 891.0], [76.8, 891.0], [76.9, 891.0], [77.0, 892.0], [77.1, 892.0], [77.2, 892.0], [77.3, 892.0], [77.4, 892.0], [77.5, 892.0], [77.6, 892.0], [77.7, 892.0], [77.8, 892.0], [77.9, 892.0], [78.0, 897.0], [78.1, 897.0], [78.2, 897.0], [78.3, 897.0], [78.4, 897.0], [78.5, 897.0], [78.6, 897.0], [78.7, 897.0], [78.8, 897.0], [78.9, 897.0], [79.0, 899.0], [79.1, 899.0], [79.2, 899.0], [79.3, 899.0], [79.4, 899.0], [79.5, 899.0], [79.6, 899.0], [79.7, 899.0], [79.8, 899.0], [79.9, 899.0], [80.0, 920.0], [80.1, 920.0], [80.2, 920.0], [80.3, 920.0], [80.4, 920.0], [80.5, 920.0], [80.6, 920.0], [80.7, 920.0], [80.8, 920.0], [80.9, 920.0], [81.0, 924.0], [81.1, 924.0], [81.2, 924.0], [81.3, 924.0], [81.4, 924.0], [81.5, 924.0], [81.6, 924.0], [81.7, 924.0], [81.8, 924.0], [81.9, 924.0], [82.0, 944.0], [82.1, 944.0], [82.2, 944.0], [82.3, 944.0], [82.4, 944.0], [82.5, 944.0], [82.6, 944.0], [82.7, 944.0], [82.8, 944.0], [82.9, 944.0], [83.0, 950.0], [83.1, 950.0], [83.2, 950.0], [83.3, 950.0], [83.4, 950.0], [83.5, 950.0], [83.6, 950.0], [83.7, 950.0], [83.8, 950.0], [83.9, 950.0], [84.0, 962.0], [84.1, 962.0], [84.2, 962.0], [84.3, 962.0], [84.4, 962.0], [84.5, 962.0], [84.6, 962.0], [84.7, 962.0], [84.8, 962.0], [84.9, 962.0], [85.0, 970.0], [85.1, 970.0], [85.2, 970.0], [85.3, 970.0], [85.4, 970.0], [85.5, 970.0], [85.6, 970.0], [85.7, 970.0], [85.8, 970.0], [85.9, 970.0], [86.0, 993.0], [86.1, 993.0], [86.2, 993.0], [86.3, 993.0], [86.4, 993.0], [86.5, 993.0], [86.6, 993.0], [86.7, 993.0], [86.8, 993.0], [86.9, 993.0], [87.0, 1064.0], [87.1, 1064.0], [87.2, 1064.0], [87.3, 1064.0], [87.4, 1064.0], [87.5, 1064.0], [87.6, 1064.0], [87.7, 1064.0], [87.8, 1064.0], [87.9, 1064.0], [88.0, 1067.0], [88.1, 1067.0], [88.2, 1067.0], [88.3, 1067.0], [88.4, 1067.0], [88.5, 1067.0], [88.6, 1067.0], [88.7, 1067.0], [88.8, 1067.0], [88.9, 1067.0], [89.0, 1082.0], [89.1, 1082.0], [89.2, 1082.0], [89.3, 1082.0], [89.4, 1082.0], [89.5, 1082.0], [89.6, 1082.0], [89.7, 1082.0], [89.8, 1082.0], [89.9, 1082.0], [90.0, 1105.0], [90.1, 1105.0], [90.2, 1105.0], [90.3, 1105.0], [90.4, 1105.0], [90.5, 1105.0], [90.6, 1105.0], [90.7, 1105.0], [90.8, 1105.0], [90.9, 1105.0], [91.0, 1153.0], [91.1, 1153.0], [91.2, 1153.0], [91.3, 1153.0], [91.4, 1153.0], [91.5, 1153.0], [91.6, 1153.0], [91.7, 1153.0], [91.8, 1153.0], [91.9, 1153.0], [92.0, 1169.0], [92.1, 1169.0], [92.2, 1169.0], [92.3, 1169.0], [92.4, 1169.0], [92.5, 1169.0], [92.6, 1169.0], [92.7, 1169.0], [92.8, 1169.0], [92.9, 1169.0], [93.0, 1345.0], [93.1, 1345.0], [93.2, 1345.0], [93.3, 1345.0], [93.4, 1345.0], [93.5, 1345.0], [93.6, 1345.0], [93.7, 1345.0], [93.8, 1345.0], [93.9, 1345.0], [94.0, 1738.0], [94.1, 1738.0], [94.2, 1738.0], [94.3, 1738.0], [94.4, 1738.0], [94.5, 1738.0], [94.6, 1738.0], [94.7, 1738.0], [94.8, 1738.0], [94.9, 1738.0], [95.0, 2051.0], [95.1, 2051.0], [95.2, 2051.0], [95.3, 2051.0], [95.4, 2051.0], [95.5, 2051.0], [95.6, 2051.0], [95.7, 2051.0], [95.8, 2051.0], [95.9, 2051.0], [96.0, 2203.0], [96.1, 2203.0], [96.2, 2203.0], [96.3, 2203.0], [96.4, 2203.0], [96.5, 2203.0], [96.6, 2203.0], [96.7, 2203.0], [96.8, 2203.0], [96.9, 2203.0], [97.0, 2402.0], [97.1, 2402.0], [97.2, 2402.0], [97.3, 2402.0], [97.4, 2402.0], [97.5, 2402.0], [97.6, 2402.0], [97.7, 2402.0], [97.8, 2402.0], [97.9, 2402.0], [98.0, 2852.0], [98.1, 2852.0], [98.2, 2852.0], [98.3, 2852.0], [98.4, 2852.0], [98.5, 2852.0], [98.6, 2852.0], [98.7, 2852.0], [98.8, 2852.0], [98.9, 2852.0], [99.0, 2869.0], [99.1, 2869.0], [99.2, 2869.0], [99.3, 2869.0], [99.4, 2869.0], [99.5, 2869.0], [99.6, 2869.0], [99.7, 2869.0], [99.8, 2869.0], [99.9, 2869.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[0.0, 218.0], [0.1, 218.0], [0.2, 218.0], [0.3, 218.0], [0.4, 218.0], [0.5, 218.0], [0.6, 218.0], [0.7, 218.0], [0.8, 218.0], [0.9, 218.0], [1.0, 225.0], [1.1, 225.0], [1.2, 225.0], [1.3, 225.0], [1.4, 225.0], [1.5, 225.0], [1.6, 225.0], [1.7, 225.0], [1.8, 225.0], [1.9, 225.0], [2.0, 236.0], [2.1, 236.0], [2.2, 236.0], [2.3, 236.0], [2.4, 236.0], [2.5, 236.0], [2.6, 236.0], [2.7, 236.0], [2.8, 236.0], [2.9, 236.0], [3.0, 274.0], [3.1, 274.0], [3.2, 274.0], [3.3, 274.0], [3.4, 274.0], [3.5, 274.0], [3.6, 274.0], [3.7, 274.0], [3.8, 274.0], [3.9, 274.0], [4.0, 298.0], [4.1, 298.0], [4.2, 298.0], [4.3, 298.0], [4.4, 298.0], [4.5, 298.0], [4.6, 298.0], [4.7, 298.0], [4.8, 298.0], [4.9, 298.0], [5.0, 340.0], [5.1, 340.0], [5.2, 340.0], [5.3, 340.0], [5.4, 340.0], [5.5, 340.0], [5.6, 340.0], [5.7, 340.0], [5.8, 340.0], [5.9, 340.0], [6.0, 341.0], [6.1, 341.0], [6.2, 341.0], [6.3, 341.0], [6.4, 341.0], [6.5, 341.0], [6.6, 341.0], [6.7, 341.0], [6.8, 341.0], [6.9, 341.0], [7.0, 370.0], [7.1, 370.0], [7.2, 370.0], [7.3, 370.0], [7.4, 370.0], [7.5, 370.0], [7.6, 370.0], [7.7, 370.0], [7.8, 370.0], [7.9, 370.0], [8.0, 379.0], [8.1, 379.0], [8.2, 379.0], [8.3, 379.0], [8.4, 379.0], [8.5, 379.0], [8.6, 379.0], [8.7, 379.0], [8.8, 379.0], [8.9, 379.0], [9.0, 385.0], [9.1, 385.0], [9.2, 385.0], [9.3, 385.0], [9.4, 385.0], [9.5, 385.0], [9.6, 385.0], [9.7, 385.0], [9.8, 385.0], [9.9, 385.0], [10.0, 398.0], [10.1, 398.0], [10.2, 398.0], [10.3, 398.0], [10.4, 398.0], [10.5, 398.0], [10.6, 398.0], [10.7, 398.0], [10.8, 398.0], [10.9, 398.0], [11.0, 417.0], [11.1, 417.0], [11.2, 417.0], [11.3, 417.0], [11.4, 417.0], [11.5, 417.0], [11.6, 417.0], [11.7, 417.0], [11.8, 417.0], [11.9, 417.0], [12.0, 421.0], [12.1, 421.0], [12.2, 421.0], [12.3, 421.0], [12.4, 421.0], [12.5, 421.0], [12.6, 421.0], [12.7, 421.0], [12.8, 421.0], [12.9, 421.0], [13.0, 430.0], [13.1, 430.0], [13.2, 430.0], [13.3, 430.0], [13.4, 430.0], [13.5, 430.0], [13.6, 430.0], [13.7, 430.0], [13.8, 430.0], [13.9, 430.0], [14.0, 432.0], [14.1, 432.0], [14.2, 432.0], [14.3, 432.0], [14.4, 432.0], [14.5, 432.0], [14.6, 432.0], [14.7, 432.0], [14.8, 432.0], [14.9, 432.0], [15.0, 436.0], [15.1, 436.0], [15.2, 436.0], [15.3, 436.0], [15.4, 436.0], [15.5, 436.0], [15.6, 436.0], [15.7, 436.0], [15.8, 436.0], [15.9, 436.0], [16.0, 450.0], [16.1, 450.0], [16.2, 450.0], [16.3, 450.0], [16.4, 450.0], [16.5, 450.0], [16.6, 450.0], [16.7, 450.0], [16.8, 450.0], [16.9, 450.0], [17.0, 451.0], [17.1, 451.0], [17.2, 451.0], [17.3, 451.0], [17.4, 451.0], [17.5, 451.0], [17.6, 451.0], [17.7, 451.0], [17.8, 451.0], [17.9, 451.0], [18.0, 457.0], [18.1, 457.0], [18.2, 457.0], [18.3, 457.0], [18.4, 457.0], [18.5, 457.0], [18.6, 457.0], [18.7, 457.0], [18.8, 457.0], [18.9, 457.0], [19.0, 465.0], [19.1, 465.0], [19.2, 465.0], [19.3, 465.0], [19.4, 465.0], [19.5, 465.0], [19.6, 465.0], [19.7, 465.0], [19.8, 465.0], [19.9, 465.0], [20.0, 466.0], [20.1, 466.0], [20.2, 466.0], [20.3, 466.0], [20.4, 466.0], [20.5, 466.0], [20.6, 466.0], [20.7, 466.0], [20.8, 466.0], [20.9, 466.0], [21.0, 467.0], [21.1, 467.0], [21.2, 467.0], [21.3, 467.0], [21.4, 467.0], [21.5, 467.0], [21.6, 467.0], [21.7, 467.0], [21.8, 467.0], [21.9, 467.0], [22.0, 470.0], [22.1, 470.0], [22.2, 470.0], [22.3, 470.0], [22.4, 470.0], [22.5, 470.0], [22.6, 470.0], [22.7, 470.0], [22.8, 470.0], [22.9, 470.0], [23.0, 470.0], [23.1, 470.0], [23.2, 470.0], [23.3, 470.0], [23.4, 470.0], [23.5, 470.0], [23.6, 470.0], [23.7, 470.0], [23.8, 470.0], [23.9, 470.0], [24.0, 472.0], [24.1, 472.0], [24.2, 472.0], [24.3, 472.0], [24.4, 472.0], [24.5, 472.0], [24.6, 472.0], [24.7, 472.0], [24.8, 472.0], [24.9, 472.0], [25.0, 472.0], [25.1, 472.0], [25.2, 472.0], [25.3, 472.0], [25.4, 472.0], [25.5, 472.0], [25.6, 472.0], [25.7, 472.0], [25.8, 472.0], [25.9, 472.0], [26.0, 475.0], [26.1, 475.0], [26.2, 475.0], [26.3, 475.0], [26.4, 475.0], [26.5, 475.0], [26.6, 475.0], [26.7, 475.0], [26.8, 475.0], [26.9, 475.0], [27.0, 496.0], [27.1, 496.0], [27.2, 496.0], [27.3, 496.0], [27.4, 496.0], [27.5, 496.0], [27.6, 496.0], [27.7, 496.0], [27.8, 496.0], [27.9, 496.0], [28.0, 500.0], [28.1, 500.0], [28.2, 500.0], [28.3, 500.0], [28.4, 500.0], [28.5, 500.0], [28.6, 500.0], [28.7, 500.0], [28.8, 500.0], [28.9, 500.0], [29.0, 519.0], [29.1, 519.0], [29.2, 519.0], [29.3, 519.0], [29.4, 519.0], [29.5, 519.0], [29.6, 519.0], [29.7, 519.0], [29.8, 519.0], [29.9, 519.0], [30.0, 521.0], [30.1, 521.0], [30.2, 521.0], [30.3, 521.0], [30.4, 521.0], [30.5, 521.0], [30.6, 521.0], [30.7, 521.0], [30.8, 521.0], [30.9, 521.0], [31.0, 528.0], [31.1, 528.0], [31.2, 528.0], [31.3, 528.0], [31.4, 528.0], [31.5, 528.0], [31.6, 528.0], [31.7, 528.0], [31.8, 528.0], [31.9, 528.0], [32.0, 559.0], [32.1, 559.0], [32.2, 559.0], [32.3, 559.0], [32.4, 559.0], [32.5, 559.0], [32.6, 559.0], [32.7, 559.0], [32.8, 559.0], [32.9, 559.0], [33.0, 563.0], [33.1, 563.0], [33.2, 563.0], [33.3, 563.0], [33.4, 563.0], [33.5, 563.0], [33.6, 563.0], [33.7, 563.0], [33.8, 563.0], [33.9, 563.0], [34.0, 566.0], [34.1, 566.0], [34.2, 566.0], [34.3, 566.0], [34.4, 566.0], [34.5, 566.0], [34.6, 566.0], [34.7, 566.0], [34.8, 566.0], [34.9, 566.0], [35.0, 567.0], [35.1, 567.0], [35.2, 567.0], [35.3, 567.0], [35.4, 567.0], [35.5, 567.0], [35.6, 567.0], [35.7, 567.0], [35.8, 567.0], [35.9, 567.0], [36.0, 568.0], [36.1, 568.0], [36.2, 568.0], [36.3, 568.0], [36.4, 568.0], [36.5, 568.0], [36.6, 568.0], [36.7, 568.0], [36.8, 568.0], [36.9, 568.0], [37.0, 569.0], [37.1, 569.0], [37.2, 569.0], [37.3, 569.0], [37.4, 569.0], [37.5, 569.0], [37.6, 569.0], [37.7, 569.0], [37.8, 569.0], [37.9, 569.0], [38.0, 576.0], [38.1, 576.0], [38.2, 576.0], [38.3, 576.0], [38.4, 576.0], [38.5, 576.0], [38.6, 576.0], [38.7, 576.0], [38.8, 576.0], [38.9, 576.0], [39.0, 580.0], [39.1, 580.0], [39.2, 580.0], [39.3, 580.0], [39.4, 580.0], [39.5, 580.0], [39.6, 580.0], [39.7, 580.0], [39.8, 580.0], [39.9, 580.0], [40.0, 581.0], [40.1, 581.0], [40.2, 581.0], [40.3, 581.0], [40.4, 581.0], [40.5, 581.0], [40.6, 581.0], [40.7, 581.0], [40.8, 581.0], [40.9, 581.0], [41.0, 592.0], [41.1, 592.0], [41.2, 592.0], [41.3, 592.0], [41.4, 592.0], [41.5, 592.0], [41.6, 592.0], [41.7, 592.0], [41.8, 592.0], [41.9, 592.0], [42.0, 593.0], [42.1, 593.0], [42.2, 593.0], [42.3, 593.0], [42.4, 593.0], [42.5, 593.0], [42.6, 593.0], [42.7, 593.0], [42.8, 593.0], [42.9, 593.0], [43.0, 595.0], [43.1, 595.0], [43.2, 595.0], [43.3, 595.0], [43.4, 595.0], [43.5, 595.0], [43.6, 595.0], [43.7, 595.0], [43.8, 595.0], [43.9, 595.0], [44.0, 597.0], [44.1, 597.0], [44.2, 597.0], [44.3, 597.0], [44.4, 597.0], [44.5, 597.0], [44.6, 597.0], [44.7, 597.0], [44.8, 597.0], [44.9, 597.0], [45.0, 602.0], [45.1, 602.0], [45.2, 602.0], [45.3, 602.0], [45.4, 602.0], [45.5, 602.0], [45.6, 602.0], [45.7, 602.0], [45.8, 602.0], [45.9, 602.0], [46.0, 609.0], [46.1, 609.0], [46.2, 609.0], [46.3, 609.0], [46.4, 609.0], [46.5, 609.0], [46.6, 609.0], [46.7, 609.0], [46.8, 609.0], [46.9, 609.0], [47.0, 610.0], [47.1, 610.0], [47.2, 610.0], [47.3, 610.0], [47.4, 610.0], [47.5, 610.0], [47.6, 610.0], [47.7, 610.0], [47.8, 610.0], [47.9, 610.0], [48.0, 615.0], [48.1, 615.0], [48.2, 615.0], [48.3, 615.0], [48.4, 615.0], [48.5, 615.0], [48.6, 615.0], [48.7, 615.0], [48.8, 615.0], [48.9, 615.0], [49.0, 626.0], [49.1, 626.0], [49.2, 626.0], [49.3, 626.0], [49.4, 626.0], [49.5, 626.0], [49.6, 626.0], [49.7, 626.0], [49.8, 626.0], [49.9, 626.0], [50.0, 629.0], [50.1, 629.0], [50.2, 629.0], [50.3, 629.0], [50.4, 629.0], [50.5, 629.0], [50.6, 629.0], [50.7, 629.0], [50.8, 629.0], [50.9, 629.0], [51.0, 633.0], [51.1, 633.0], [51.2, 633.0], [51.3, 633.0], [51.4, 633.0], [51.5, 633.0], [51.6, 633.0], [51.7, 633.0], [51.8, 633.0], [51.9, 633.0], [52.0, 643.0], [52.1, 643.0], [52.2, 643.0], [52.3, 643.0], [52.4, 643.0], [52.5, 643.0], [52.6, 643.0], [52.7, 643.0], [52.8, 643.0], [52.9, 643.0], [53.0, 645.0], [53.1, 645.0], [53.2, 645.0], [53.3, 645.0], [53.4, 645.0], [53.5, 645.0], [53.6, 645.0], [53.7, 645.0], [53.8, 645.0], [53.9, 645.0], [54.0, 645.0], [54.1, 645.0], [54.2, 645.0], [54.3, 645.0], [54.4, 645.0], [54.5, 645.0], [54.6, 645.0], [54.7, 645.0], [54.8, 645.0], [54.9, 645.0], [55.0, 652.0], [55.1, 652.0], [55.2, 652.0], [55.3, 652.0], [55.4, 652.0], [55.5, 652.0], [55.6, 652.0], [55.7, 652.0], [55.8, 652.0], [55.9, 652.0], [56.0, 664.0], [56.1, 664.0], [56.2, 664.0], [56.3, 664.0], [56.4, 664.0], [56.5, 664.0], [56.6, 664.0], [56.7, 664.0], [56.8, 664.0], [56.9, 664.0], [57.0, 670.0], [57.1, 670.0], [57.2, 670.0], [57.3, 670.0], [57.4, 670.0], [57.5, 670.0], [57.6, 670.0], [57.7, 670.0], [57.8, 670.0], [57.9, 670.0], [58.0, 676.0], [58.1, 676.0], [58.2, 676.0], [58.3, 676.0], [58.4, 676.0], [58.5, 676.0], [58.6, 676.0], [58.7, 676.0], [58.8, 676.0], [58.9, 676.0], [59.0, 677.0], [59.1, 677.0], [59.2, 677.0], [59.3, 677.0], [59.4, 677.0], [59.5, 677.0], [59.6, 677.0], [59.7, 677.0], [59.8, 677.0], [59.9, 677.0], [60.0, 684.0], [60.1, 684.0], [60.2, 684.0], [60.3, 684.0], [60.4, 684.0], [60.5, 684.0], [60.6, 684.0], [60.7, 684.0], [60.8, 684.0], [60.9, 684.0], [61.0, 686.0], [61.1, 686.0], [61.2, 686.0], [61.3, 686.0], [61.4, 686.0], [61.5, 686.0], [61.6, 686.0], [61.7, 686.0], [61.8, 686.0], [61.9, 686.0], [62.0, 686.0], [62.1, 686.0], [62.2, 686.0], [62.3, 686.0], [62.4, 686.0], [62.5, 686.0], [62.6, 686.0], [62.7, 686.0], [62.8, 686.0], [62.9, 686.0], [63.0, 693.0], [63.1, 693.0], [63.2, 693.0], [63.3, 693.0], [63.4, 693.0], [63.5, 693.0], [63.6, 693.0], [63.7, 693.0], [63.8, 693.0], [63.9, 693.0], [64.0, 694.0], [64.1, 694.0], [64.2, 694.0], [64.3, 694.0], [64.4, 694.0], [64.5, 694.0], [64.6, 694.0], [64.7, 694.0], [64.8, 694.0], [64.9, 694.0], [65.0, 695.0], [65.1, 695.0], [65.2, 695.0], [65.3, 695.0], [65.4, 695.0], [65.5, 695.0], [65.6, 695.0], [65.7, 695.0], [65.8, 695.0], [65.9, 695.0], [66.0, 702.0], [66.1, 702.0], [66.2, 702.0], [66.3, 702.0], [66.4, 702.0], [66.5, 702.0], [66.6, 702.0], [66.7, 702.0], [66.8, 702.0], [66.9, 702.0], [67.0, 707.0], [67.1, 707.0], [67.2, 707.0], [67.3, 707.0], [67.4, 707.0], [67.5, 707.0], [67.6, 707.0], [67.7, 707.0], [67.8, 707.0], [67.9, 707.0], [68.0, 713.0], [68.1, 713.0], [68.2, 713.0], [68.3, 713.0], [68.4, 713.0], [68.5, 713.0], [68.6, 713.0], [68.7, 713.0], [68.8, 713.0], [68.9, 713.0], [69.0, 714.0], [69.1, 714.0], [69.2, 714.0], [69.3, 714.0], [69.4, 714.0], [69.5, 714.0], [69.6, 714.0], [69.7, 714.0], [69.8, 714.0], [69.9, 714.0], [70.0, 714.0], [70.1, 714.0], [70.2, 714.0], [70.3, 714.0], [70.4, 714.0], [70.5, 714.0], [70.6, 714.0], [70.7, 714.0], [70.8, 714.0], [70.9, 714.0], [71.0, 723.0], [71.1, 723.0], [71.2, 723.0], [71.3, 723.0], [71.4, 723.0], [71.5, 723.0], [71.6, 723.0], [71.7, 723.0], [71.8, 723.0], [71.9, 723.0], [72.0, 723.0], [72.1, 723.0], [72.2, 723.0], [72.3, 723.0], [72.4, 723.0], [72.5, 723.0], [72.6, 723.0], [72.7, 723.0], [72.8, 723.0], [72.9, 723.0], [73.0, 725.0], [73.1, 725.0], [73.2, 725.0], [73.3, 725.0], [73.4, 725.0], [73.5, 725.0], [73.6, 725.0], [73.7, 725.0], [73.8, 725.0], [73.9, 725.0], [74.0, 726.0], [74.1, 726.0], [74.2, 726.0], [74.3, 726.0], [74.4, 726.0], [74.5, 726.0], [74.6, 726.0], [74.7, 726.0], [74.8, 726.0], [74.9, 726.0], [75.0, 735.0], [75.1, 735.0], [75.2, 735.0], [75.3, 735.0], [75.4, 735.0], [75.5, 735.0], [75.6, 735.0], [75.7, 735.0], [75.8, 735.0], [75.9, 735.0], [76.0, 737.0], [76.1, 737.0], [76.2, 737.0], [76.3, 737.0], [76.4, 737.0], [76.5, 737.0], [76.6, 737.0], [76.7, 737.0], [76.8, 737.0], [76.9, 737.0], [77.0, 743.0], [77.1, 743.0], [77.2, 743.0], [77.3, 743.0], [77.4, 743.0], [77.5, 743.0], [77.6, 743.0], [77.7, 743.0], [77.8, 743.0], [77.9, 743.0], [78.0, 746.0], [78.1, 746.0], [78.2, 746.0], [78.3, 746.0], [78.4, 746.0], [78.5, 746.0], [78.6, 746.0], [78.7, 746.0], [78.8, 746.0], [78.9, 746.0], [79.0, 768.0], [79.1, 768.0], [79.2, 768.0], [79.3, 768.0], [79.4, 768.0], [79.5, 768.0], [79.6, 768.0], [79.7, 768.0], [79.8, 768.0], [79.9, 768.0], [80.0, 771.0], [80.1, 771.0], [80.2, 771.0], [80.3, 771.0], [80.4, 771.0], [80.5, 771.0], [80.6, 771.0], [80.7, 771.0], [80.8, 771.0], [80.9, 771.0], [81.0, 772.0], [81.1, 772.0], [81.2, 772.0], [81.3, 772.0], [81.4, 772.0], [81.5, 772.0], [81.6, 772.0], [81.7, 772.0], [81.8, 772.0], [81.9, 772.0], [82.0, 780.0], [82.1, 780.0], [82.2, 780.0], [82.3, 780.0], [82.4, 780.0], [82.5, 780.0], [82.6, 780.0], [82.7, 780.0], [82.8, 780.0], [82.9, 780.0], [83.0, 782.0], [83.1, 782.0], [83.2, 782.0], [83.3, 782.0], [83.4, 782.0], [83.5, 782.0], [83.6, 782.0], [83.7, 782.0], [83.8, 782.0], [83.9, 782.0], [84.0, 795.0], [84.1, 795.0], [84.2, 795.0], [84.3, 795.0], [84.4, 795.0], [84.5, 795.0], [84.6, 795.0], [84.7, 795.0], [84.8, 795.0], [84.9, 795.0], [85.0, 805.0], [85.1, 805.0], [85.2, 805.0], [85.3, 805.0], [85.4, 805.0], [85.5, 805.0], [85.6, 805.0], [85.7, 805.0], [85.8, 805.0], [85.9, 805.0], [86.0, 807.0], [86.1, 807.0], [86.2, 807.0], [86.3, 807.0], [86.4, 807.0], [86.5, 807.0], [86.6, 807.0], [86.7, 807.0], [86.8, 807.0], [86.9, 807.0], [87.0, 815.0], [87.1, 815.0], [87.2, 815.0], [87.3, 815.0], [87.4, 815.0], [87.5, 815.0], [87.6, 815.0], [87.7, 815.0], [87.8, 815.0], [87.9, 815.0], [88.0, 815.0], [88.1, 815.0], [88.2, 815.0], [88.3, 815.0], [88.4, 815.0], [88.5, 815.0], [88.6, 815.0], [88.7, 815.0], [88.8, 815.0], [88.9, 815.0], [89.0, 819.0], [89.1, 819.0], [89.2, 819.0], [89.3, 819.0], [89.4, 819.0], [89.5, 819.0], [89.6, 819.0], [89.7, 819.0], [89.8, 819.0], [89.9, 819.0], [90.0, 825.0], [90.1, 825.0], [90.2, 825.0], [90.3, 825.0], [90.4, 825.0], [90.5, 825.0], [90.6, 825.0], [90.7, 825.0], [90.8, 825.0], [90.9, 825.0], [91.0, 832.0], [91.1, 832.0], [91.2, 832.0], [91.3, 832.0], [91.4, 832.0], [91.5, 832.0], [91.6, 832.0], [91.7, 832.0], [91.8, 832.0], [91.9, 832.0], [92.0, 845.0], [92.1, 845.0], [92.2, 845.0], [92.3, 845.0], [92.4, 845.0], [92.5, 845.0], [92.6, 845.0], [92.7, 845.0], [92.8, 845.0], [92.9, 845.0], [93.0, 864.0], [93.1, 864.0], [93.2, 864.0], [93.3, 864.0], [93.4, 864.0], [93.5, 864.0], [93.6, 864.0], [93.7, 864.0], [93.8, 864.0], [93.9, 864.0], [94.0, 932.0], [94.1, 932.0], [94.2, 932.0], [94.3, 932.0], [94.4, 932.0], [94.5, 932.0], [94.6, 932.0], [94.7, 932.0], [94.8, 932.0], [94.9, 932.0], [95.0, 975.0], [95.1, 975.0], [95.2, 975.0], [95.3, 975.0], [95.4, 975.0], [95.5, 975.0], [95.6, 975.0], [95.7, 975.0], [95.8, 975.0], [95.9, 975.0], [96.0, 1979.0], [96.1, 1979.0], [96.2, 1979.0], [96.3, 1979.0], [96.4, 1979.0], [96.5, 1979.0], [96.6, 1979.0], [96.7, 1979.0], [96.8, 1979.0], [96.9, 1979.0], [97.0, 1993.0], [97.1, 1993.0], [97.2, 1993.0], [97.3, 1993.0], [97.4, 1993.0], [97.5, 1993.0], [97.6, 1993.0], [97.7, 1993.0], [97.8, 1993.0], [97.9, 1993.0], [98.0, 2423.0], [98.1, 2423.0], [98.2, 2423.0], [98.3, 2423.0], [98.4, 2423.0], [98.5, 2423.0], [98.6, 2423.0], [98.7, 2423.0], [98.8, 2423.0], [98.9, 2423.0], [99.0, 2497.0], [99.1, 2497.0], [99.2, 2497.0], [99.3, 2497.0], [99.4, 2497.0], [99.5, 2497.0], [99.6, 2497.0], [99.7, 2497.0], [99.8, 2497.0], [99.9, 2497.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 30.0, "series": [{"data": [[2100.0, 1.0], [2300.0, 1.0], [2200.0, 1.0], [600.0, 27.0], [700.0, 12.0], [2800.0, 1.0], [2700.0, 1.0], [800.0, 3.0], [200.0, 2.0], [900.0, 2.0], [1000.0, 2.0], [1100.0, 3.0], [300.0, 4.0], [1500.0, 1.0], [400.0, 8.0], [1800.0, 1.0], [500.0, 30.0]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[2200.0, 1.0], [2400.0, 3.0], [2600.0, 1.0], [2700.0, 1.0], [700.0, 2.0], [3100.0, 1.0], [800.0, 2.0], [3200.0, 3.0], [900.0, 7.0], [1000.0, 7.0], [1100.0, 8.0], [1200.0, 7.0], [300.0, 1.0], [1300.0, 10.0], [1400.0, 15.0], [1500.0, 13.0], [1600.0, 11.0], [1700.0, 2.0], [1800.0, 3.0], [1900.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[2200.0, 1.0], [600.0, 10.0], [2400.0, 1.0], [700.0, 20.0], [2800.0, 2.0], [800.0, 21.0], [900.0, 7.0], [1000.0, 3.0], [1100.0, 3.0], [300.0, 2.0], [1300.0, 1.0], [400.0, 14.0], [100.0, 2.0], [1700.0, 1.0], [500.0, 11.0], [2000.0, 1.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[600.0, 21.0], [2400.0, 2.0], [300.0, 6.0], [700.0, 19.0], [400.0, 17.0], [800.0, 9.0], [200.0, 5.0], [900.0, 2.0], [1900.0, 2.0], [500.0, 17.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 57.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 281.0, "series": [{"data": [[0.0, 62.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 281.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 57.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 34.70500000000002, "minX": 1.643304E12, "maxY": 34.70500000000002, "series": [{"data": [[1.643304E12, 34.70500000000002]], "isOverall": false, "label": "CDI-J&J", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.643304E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 104.0, "minX": 1.0, "maxY": 3270.0, "series": [{"data": [[8.0, 2275.0], [35.0, 1009.4], [34.0, 666.0], [37.0, 534.0], [36.0, 1044.5], [9.0, 2356.0], [39.0, 612.0], [38.0, 583.75], [40.0, 587.25], [41.0, 579.7142857142858], [42.0, 636.8333333333334], [43.0, 635.625], [45.0, 653.0], [44.0, 835.0], [46.0, 888.3333333333334], [47.0, 682.0], [48.0, 586.0], [25.0, 785.6111111111112], [26.0, 303.0], [27.0, 288.5], [28.0, 361.0], [29.0, 2791.0], [31.0, 341.0]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[36.97000000000002, 741.12]], "isOverall": false, "label": "Login-page-Aggregated", "isController": false}, {"data": [[33.0, 1678.0], [32.0, 1534.0], [2.0, 341.0], [35.0, 1445.5], [34.0, 1555.0], [37.0, 1285.6666666666667], [36.0, 1241.0], [39.0, 1303.5], [38.0, 1298.5], [41.0, 1183.5], [40.0, 1138.0], [43.0, 1514.5833333333333], [42.0, 1353.0], [44.0, 1336.4444444444443], [45.0, 1538.5], [47.0, 1654.5], [46.0, 2031.5], [48.0, 1424.25], [49.0, 1461.0], [3.0, 1963.0], [4.0, 2421.0], [5.0, 772.0], [6.0, 2677.0], [7.0, 1673.0], [8.0, 943.0], [9.0, 1260.0], [10.0, 1081.0], [11.0, 1329.0], [12.0, 1231.0], [13.0, 793.0], [14.0, 1170.0], [16.0, 2065.0], [1.0, 508.0], [17.0, 1190.0], [19.0, 2378.5], [20.0, 1240.0], [21.0, 1593.0], [22.0, 3270.0], [23.0, 1540.0], [24.0, 1578.0], [25.0, 1810.0], [26.0, 1616.0], [27.0, 1502.0], [28.0, 1601.0], [29.0, 1597.0], [30.0, 1496.0], [31.0, 1747.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[33.94999999999999, 1488.79]], "isOverall": false, "label": "Home-Aggregated", "isController": false}, {"data": [[33.0, 833.0], [32.0, 839.0], [2.0, 104.0], [35.0, 700.5], [34.0, 944.0], [37.0, 670.3333333333334], [36.0, 609.2], [39.0, 652.0], [38.0, 693.5], [41.0, 581.0], [40.0, 591.0], [43.0, 883.6666666666667], [42.0, 656.6666666666666], [44.0, 680.3333333333334], [45.0, 835.0], [47.0, 902.75], [46.0, 613.5], [48.0, 737.0], [49.0, 714.0], [3.0, 1738.0], [4.0, 2203.0], [5.0, 336.0], [6.0, 2402.0], [7.0, 1105.0], [8.0, 602.0], [9.0, 890.0], [10.0, 696.0], [11.0, 897.0], [12.0, 780.0], [13.0, 495.0], [14.0, 828.0], [16.0, 626.0], [1.0, 109.0], [17.0, 759.0], [19.0, 1931.0], [20.0, 775.0], [21.0, 1064.0], [22.0, 2852.0], [23.0, 1082.0], [24.0, 962.0], [25.0, 834.0], [26.0, 891.0], [27.0, 892.0], [28.0, 924.0], [29.0, 765.0], [30.0, 769.0], [31.0, 883.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[33.94999999999999, 819.9099999999999]], "isOverall": false, "label": "Home-0-Aggregated", "isController": false}, {"data": [[33.0, 845.0], [32.0, 694.0], [2.0, 236.0], [35.0, 744.5], [34.0, 610.0], [37.0, 614.6666666666666], [36.0, 631.2], [39.0, 651.5], [38.0, 604.0], [41.0, 601.75], [40.0, 547.0], [43.0, 630.2500000000001], [42.0, 695.3333333333334], [44.0, 655.111111111111], [45.0, 703.0], [47.0, 751.0], [46.0, 1417.3333333333335], [48.0, 686.75], [49.0, 746.0], [3.0, 225.0], [4.0, 218.0], [5.0, 436.0], [6.0, 274.0], [7.0, 567.0], [8.0, 340.0], [9.0, 370.0], [10.0, 385.0], [11.0, 432.0], [12.0, 450.0], [13.0, 298.0], [14.0, 341.0], [16.0, 1438.0], [1.0, 398.0], [17.0, 430.0], [19.0, 446.5], [20.0, 465.0], [21.0, 528.0], [22.0, 417.0], [23.0, 457.0], [24.0, 615.0], [25.0, 975.0], [26.0, 725.0], [27.0, 609.0], [28.0, 676.0], [29.0, 832.0], [30.0, 726.0], [31.0, 864.0]], "isOverall": false, "label": "Home-1", "isController": false}, {"data": [[33.94999999999999, 668.2099999999999]], "isOverall": false, "label": "Home-1-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 49.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5245.066666666667, "minX": 1.643304E12, "maxY": 363935.6, "series": [{"data": [[1.643304E12, 363935.6]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.643304E12, 5245.066666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.643304E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 668.2099999999999, "minX": 1.643304E12, "maxY": 1488.79, "series": [{"data": [[1.643304E12, 741.12]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.643304E12, 1488.79]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.643304E12, 819.9099999999999]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.643304E12, 668.2099999999999]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.643304E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 532.3100000000001, "minX": 1.643304E12, "maxY": 819.8399999999998, "series": [{"data": [[1.643304E12, 706.4700000000001]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.643304E12, 819.8399999999998]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.643304E12, 819.8399999999998]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.643304E12, 532.3100000000001]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.643304E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.643304E12, "maxY": 193.42000000000002, "series": [{"data": [[1.643304E12, 193.42000000000002]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.643304E12, 0.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.643304E12, 0.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.643304E12, 0.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.643304E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 104.0, "minX": 1.643304E12, "maxY": 3291.0, "series": [{"data": [[1.643304E12, 3291.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.643304E12, 1616.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.643304E12, 3170.9500000000025]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.643304E12, 2198.199999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.643304E12, 104.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.643304E12, 725.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.643304E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 526.0, "minX": 23.0, "maxY": 891.5, "series": [{"data": [[64.0, 891.5], [71.0, 780.0], [68.0, 759.0], [23.0, 664.0], [51.0, 602.0], [61.0, 633.0], [62.0, 526.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 71.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 449.0, "minX": 23.0, "maxY": 806.0, "series": [{"data": [[64.0, 806.0], [71.0, 656.0], [68.0, 704.0], [23.0, 630.0], [51.0, 449.0], [61.0, 570.0], [62.0, 461.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 71.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.643304E12, "maxY": 6.666666666666667, "series": [{"data": [[1.643304E12, 6.666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.643304E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.643304E12, "maxY": 5.0, "series": [{"data": [[1.643304E12, 5.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.643304E12, 1.6666666666666667]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.643304E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.643304E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.643304E12, 1.6666666666666667]], "isOverall": false, "label": "Home-1-success", "isController": false}, {"data": [[1.643304E12, 1.6666666666666667]], "isOverall": false, "label": "Login-page-success", "isController": false}, {"data": [[1.643304E12, 1.6666666666666667]], "isOverall": false, "label": "Home-success", "isController": false}, {"data": [[1.643304E12, 1.6666666666666667]], "isOverall": false, "label": "Home-0-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.643304E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.643304E12, "maxY": 6.666666666666667, "series": [{"data": [[1.643304E12, 6.666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.643304E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

